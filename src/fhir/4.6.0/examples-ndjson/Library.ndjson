{"resourceType":"Library","id":"library-cms146-example","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-cms146-example\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eCMS146\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e2.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eAppropriate Testing for Children with Pharyngitis\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003edraft\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLogic for CMS 146: Appropriate Testing for Children with Pharyngitis\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003ehttp://hl7.org/fhir/Library/library-quick-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003ePatient\u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eCondition\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecategory\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003ediagnosis\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003eclinicalStatus\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003econfirmed\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.102.12.1011\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eCondition\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecategory\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003ediagnosis\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003eclinicalStatus\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003econfirmed\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.102.12.1012\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eEncounter\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003estatus\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003efinished\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003eclass\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003eambulatory\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003etype\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.101.12.1061\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eDiagnosticReport\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ediagnosis\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.198.12.1012\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eMedication\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.196.12.1001\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eMedicationRequest\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003estatus\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003eactive\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003emedication.code\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.196.12.1001\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eMedicationUsage\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003estatus\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode:\u003c/b\u003e\n                           \u003cspan\u003ecompleted\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003emedication.code\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003e2.16.840.1.113883.3.464.1003.196.12.1001\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003elibrary-cms146-example-content.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"url":"http://hl7.org/fhir/Library/library-cms146-example","identifier":[{"use":"official","value":"CMS146"}],"version":"2.0.0","name":"CMS146","title":"CMS146: Appropriate Testing for Children with Pharyngitis","status":"draft","type":{"coding":[{"code":"logic-library"}]},"date":"2015-07-22","description":"Logic for CMS 146: Appropriate Testing for Children with Pharyngitis","relatedArtifact":[{"type":"depends-on","resource":"http://hl7.org/fhir/Library/library-quick-model-definition"}],"dataRequirement":[{"type":"Patient"},{"type":"Condition","codeFilter":[{"path":"category","code":[{"code":"diagnosis"}]},{"path":"clinicalStatus","code":[{"code":"confirmed"}]},{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.102.12.1011"}]},{"type":"Condition","codeFilter":[{"path":"category","code":[{"code":"diagnosis"}]},{"path":"clinicalStatus","code":[{"code":"confirmed"}]},{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.102.12.1012"}]},{"type":"Encounter","codeFilter":[{"path":"status","code":[{"code":"finished"}]},{"path":"class","code":[{"code":"ambulatory"}]},{"path":"type","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.101.12.1061"}]},{"type":"DiagnosticReport","codeFilter":[{"path":"diagnosis","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.198.12.1012"}]},{"type":"Medication","codeFilter":[{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.196.12.1001"}]},{"type":"MedicationRequest","codeFilter":[{"path":"status","code":[{"code":"active"}]},{"path":"medication.code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.196.12.1001"}]},{"type":"MedicationUsage","codeFilter":[{"path":"status","code":[{"code":"completed"}]},{"path":"medication.code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.196.12.1001"}]}],"content":[{"contentType":"text/cql","data":"bGlicmFyeSBDTVMxNDYgdmVyc2lvbiAnMicKCi8qIENNUyAxNDZ2MgogKgogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIFFETSBMb2dpYwogKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqIEluaXRpYWwgUGF0aWVudCBQb3B1bGF0aW9uID0KICogICAgIEFORDogIlBhdGllbnQgQ2hhcmFjdGVyaXN0aWMgQmlydGhkYXRlOiBiaXJ0aCBkYXRlIiA+PSAyIHllYXIocykgc3RhcnRzIGJlZm9yZSBzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIgogKiAgICAgQU5EOiAiUGF0aWVudCBDaGFyYWN0ZXJpc3RpYyBCaXJ0aGRhdGU6IGJpcnRoIGRhdGUiIDwgMTggeWVhcihzKSBzdGFydHMgYmVmb3JlIHN0YXJ0IG9mICJNZWFzdXJlbWVudCBQZXJpb2QiCiAqICAgICBBTkQ6CiAqICAgICAgICAgQU5EOiAiT2NjdXJyZW5jZSBBIG9mIEVuY291bnRlciwgUGVyZm9ybWVkOiBBbWJ1bGF0b3J5L0VEIFZpc2l0IiBkdXJpbmcgIk1lYXN1cmVtZW50IFBlcmlvZCIKICogICAgICAgICBBTkQ6ICJNZWRpY2F0aW9uLCBPcmRlcjogQW50aWJpb3RpYyBNZWRpY2F0aW9ucyIgPD0gMyBkYXkocykgc3RhcnRzIGFmdGVyIHN0YXJ0IG9mICJPY2N1cnJlbmNlIEEgb2YgRW5jb3VudGVyLCBQZXJmb3JtZWQ6IEFtYnVsYXRvcnkvRUQgVmlzaXQiCiAqICAgICAgICAgQU5EOgogKiAgICAgICAgICAgICBPUjogIk9jY3VycmVuY2UgQSBvZiBFbmNvdW50ZXIsIFBlcmZvcm1lZDogQW1idWxhdG9yeS9FRCBWaXNpdCIgZHVyaW5nCiAqICAgICAgICAgICAgICAgICBPUjogIk9jY3VycmVuY2UgQSBvZiBEaWFnbm9zaXMsIEFjdGl2ZTogQWN1dGUgUGhhcnluZ2l0aXMiCiAqICAgICAgICAgICAgICAgICBPUjogIk9jY3VycmVuY2UgQSBvZiBEaWFnbm9zaXMsIEFjdGl2ZTogQWN1dGUgVG9uc2lsbGl0aXMiCiAqICAgICAgICAgICAgIE9SOgogKiAgICAgICAgICAgICAgICAgT1I6ICJPY2N1cnJlbmNlIEEgb2YgRGlhZ25vc2lzLCBBY3RpdmU6IEFjdXRlIFBoYXJ5bmdpdGlzIgogKiAgICAgICAgICAgICAgICAgT1I6ICJPY2N1cnJlbmNlIEEgb2YgRGlhZ25vc2lzLCBBY3RpdmU6IEFjdXRlIFRvbnNpbGxpdGlzIgogKiAgICAgICAgICAgICAgICAgc3RhcnRzIGR1cmluZyAiT2NjdXJyZW5jZSBBIG9mIEVuY291bnRlciwgUGVyZm9ybWVkOiBBbWJ1bGF0b3J5L0VEIFZpc2l0IgogKgogKiBEZW5vbWluYXRvciA9CiAqICAgICBBTkQ6ICJJbml0aWFsIFBhdGllbnQgUG9wdWxhdGlvbiIKICoKICogRGVub21pbmF0b3IgRXhjbHVzaW9ucyA9CiAqICAgICBBTkQ6ICJNZWRpY2F0aW9uLCBBY3RpdmU6IEFudGliaW90aWMgTWVkaWNhdGlvbnMiIDw9IDMwIGRheShzKSBzdGFydHMgYmVmb3JlIHN0YXJ0IG9mCiAqICAgICAgICAgT1I6ICJPY2N1cnJlbmNlIEEgb2YgRGlhZ25vc2lzLCBBY3RpdmU6IEFjdXRlIFBoYXJ5bmdpdGlzIgogKiAgICAgICAgIE9SOiAiT2NjdXJyZW5jZSBBIG9mIERpYWdub3NpcywgQWN0aXZlOiBBY3V0ZSBUb25zaWxsaXRpcyIKICoKICogTnVtZXJhdG9yID0KICogICAgIEFORDoKICogICAgICAgICBPUjogIkxhYm9yYXRvcnkgVGVzdCwgUmVzdWx0OiBHcm91cCBBIFN0cmVwdG9jb2NjdXMgVGVzdCAocmVzdWx0KSIgPD0gMyBkYXkocykgc3RhcnRzIGJlZm9yZSBvciBkdXJpbmcgIk9jY3VycmVuY2UgQSBvZiBFbmNvdW50ZXIsIFBlcmZvcm1lZDogQW1idWxhdG9yeS9FRCBWaXNpdCIKICogICAgICAgICBPUjogIkxhYm9yYXRvcnkgVGVzdCwgUmVzdWx0OiBHcm91cCBBIFN0cmVwdG9jb2NjdXMgVGVzdCAocmVzdWx0KSIgPD0gMyBkYXkocykgc3RhcnRzIGFmdGVyIGVuZCBvZiAiT2NjdXJyZW5jZSBBIG9mIEVuY291bnRlciwgUGVyZm9ybWVkOiBBbWJ1bGF0b3J5L0VEIFZpc2l0IgogKgogKiBEZW5vbWluYXRvciBFeGNlcHRpb25zID0KICogICAgIE5vbmUKICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogKi8KCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwoKdmFsdWVzZXQgIkFjdXRlIFBoYXJ5bmdpdGlzIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTAyLjEyLjEwMTEnCnZhbHVlc2V0ICJBY3V0ZSBUb25zaWxsaXRpcyI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMi4xMi4xMDEyJwp2YWx1ZXNldCAiQW1idWxhdG9yeS9FRCBWaXNpdCI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjEwMS4xMi4xMDYxJwp2YWx1ZXNldCAiQW50aWJpb3RpYyBNZWRpY2F0aW9ucyI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjE5Ni4xMi4xMDAxJwp2YWx1ZXNldCAiR3JvdXAgQSBTdHJlcHRvY29jY3VzIFRlc3QiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xOTguMTIuMTAxMicKCnBhcmFtZXRlciBNZWFzdXJlbWVudFBlcmlvZCBJbnRlcnZhbDxEYXRlVGltZT4KCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lIEluaXRpYWxQb3B1bGF0aW9uOgogIFBoYXJ5bmdpdGlzRW5jb3VudGVycyBFCiAgICB3aGVyZSBJbkRlbW9ncmFwaGljCgpkZWZpbmUgQWdlc1VwVG9OaW5lOgogIFBoYXJ5bmdpdGlzRW5jb3VudGVycyBFCiAgICB3aGVyZSBBZ2VJblllYXJzQXQoc3RhcnQgb2YgTWVhc3VyZW1lbnRQZXJpb2QpIDw9IDkKCmRlZmluZSBBZ2VzVGVuUGx1czoKICBQaGFyeW5naXRpc0VuY291bnRlcnMgRQogICAgd2hlcmUgQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mIE1lYXN1cmVtZW50UGVyaW9kKSA+PSAxMAoKZGVmaW5lIERlbm9taW5hdG9yOgogIEluaXRpYWxQb3B1bGF0aW9uCgpkZWZpbmUgRGVub21pbmF0b3JFeGNsdXNpb246CiAgRXhjbHVkZWRFbmNvdW50ZXJzCgpkZWZpbmUgTnVtZXJhdG9yOgogIFN0cmVwVGVzdEVuY291bnRlcnMKCmRlZmluZSBJbkRlbW9ncmFwaGljOgogICAgQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mIE1lYXN1cmVtZW50UGVyaW9kKSA+PSAyIGFuZCBBZ2VJblllYXJzQXQoc3RhcnQgb2YgTWVhc3VyZW1lbnRQZXJpb2QpIDwgMTgKCmRlZmluZSBQaGFyeW5naXRpczoKICAgIFtDb25kaXRpb246ICJBY3V0ZSBQaGFyeW5naXRpcyJdIHVuaW9uIFtDb25kaXRpb246ICJBY3V0ZSBUb25zaWxsaXRpcyJdCgpkZWZpbmUgQW50aWJpb3RpY3M6CiAgICBbTWVkaWNhdGlvblJlcXVlc3Q6ICJBbnRpYmlvdGljIE1lZGljYXRpb25zIl0KCmRlZmluZSBNZWFzdXJlbWVudFBlcmlvZEVuY291bnRlcnM6CiAgICBbRW5jb3VudGVyOiAiQW1idWxhdG9yeS9FRCBWaXNpdCJdIEUKICAgICAgICB3aGVyZSBJbkRlbW9ncmFwaGljIGFuZCBJbnRlcnZhbFtFLnBlcmlvZC4ic3RhcnQiLnZhbHVlLCBFLnBlcmlvZC4iZW5kIi52YWx1ZV0gZHVyaW5nIE1lYXN1cmVtZW50UGVyaW9kCgpkZWZpbmUgUGhhcnluZ2l0aXNFbmNvdW50ZXJzOgogICAgTWVhc3VyZW1lbnRQZXJpb2RFbmNvdW50ZXJzIEUKICAgICAgICB3aXRoIFBoYXJ5bmdpdGlzIFAKICAgICAgICAgICAgc3VjaCB0aGF0IEludGVydmFsW1Aub25zZXQudmFsdWUsIFAuYWJhdGVtZW50LnZhbHVlXSBpbmNsdWRlcyBJbnRlcnZhbFtFLnBlcmlvZC4ic3RhcnQiLnZhbHVlLCBFLnBlcmlvZC4iZW5kIi52YWx1ZV0KICAgICAgICAgICAgICAgIG9yIFAub25zZXQudmFsdWUgaW4gRS5wZXJpb2QKICAgICAgICB3aXRoIEFudGliaW90aWNzIEEgc3VjaCB0aGF0IEEuYXV0aG9yZWRPbiAzIGRheXMgb3IgbGVzcyBhZnRlciBzdGFydCBvZiBFLnBlcmlvZAoKZGVmaW5lIFBoYXJ5bmdpdGlzV2l0aFByaW9yQW50aWJpb3RpY3M6CiAgICBQaGFyeW5naXRpcyBQCiAgICAgICAgd2l0aCBBbnRpYmlvdGljcyBBIHN1Y2ggdGhhdCBBLmF1dGhvcmVkT24gMzAgZGF5cyBvciBsZXNzIGJlZm9yZSBQLm9uc2V0CgpkZWZpbmUgRXhjbHVkZWRFbmNvdW50ZXJzOgogICAgUGhhcnluZ2l0aXNFbmNvdW50ZXJzIEUKICAgICAgICB3aXRoIFBoYXJ5bmdpdGlzV2l0aFByaW9yQW50aWJpb3RpY3MgUAogICAgICAgICAgICBzdWNoIHRoYXQgSW50ZXJ2YWxbUC5vbnNldCwgUC5hYmF0ZW1lbnRdIGluY2x1ZGVzIEUucGVyaW9kCiAgICAgICAgICAgICAgICBvciBQLm9uc2V0IGluIEUucGVyaW9kCgpkZWZpbmUgU3RyZXBUZXN0RW5jb3VudGVyczoKICAgIFBoYXJ5bmdpdGlzRW5jb3VudGVycyBFCiAgICAgICAgd2l0aCBbRGlhZ25vc3RpY1JlcG9ydDogIkdyb3VwIEEgU3RyZXB0b2NvY2N1cyBUZXN0Il0gVAogICAgICAgICAgICBzdWNoIHRoYXQgVC5yZXN1bHQgaXMgbm90IG51bGwKICAgICAgICAgICAgICAgIGFuZCBULmlzc3VlZCBpbiBJbnRlcnZhbFtzdGFydCBvZiBFLnBlcmlvZCAtIDMgZGF5cywgZW5kIG9mIEUucGVyaW9kICsgMyBkYXlzXQo\u003d"},{"contentType":"application/elm+xml","data":"\u003d\u003d"}]}
{"resourceType":"Library","id":"composition-example","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003eExample of a library used as a composition of other artifacts.\n    \u003c/div\u003e"},"identifier":[{"use":"official","system":"http://example.org","value":"Zika Artifacts"}],"version":"1.0.0","title":"Zika Artifacts","status":"draft","type":{"coding":[{"code":"asset-collection"}]},"date":"2017-03-10","description":"Artifacts required for implementation of Zika Virus Management","topic":[{"text":"Zika Virus Management"}],"relatedArtifact":[{"type":"composed-of","resource":"http://example.org/fhir/ActivityDefinition/administer-zika-virus-exposure-assessment"},{"type":"composed-of","resource":"http://example.org/fhir/ActivityDefinition/order-serum-zika-dengue-virus-igm"},{"type":"composed-of","resource":"http://example.org/fhir/ActivityDefinition/provide-mosquito-prevention-advice"},{"type":"composed-of","resource":"http://example.org/fhir/Library/zika-virus-intervention-logic"},{"type":"composed-of","resource":"http://example.org/fhir/PlanDefinition/zika-virus-intervention"},{"type":"composed-of","resource":"http://hl7.org/fhir/Questionnaire/zika-virus-exposure-assessment"},{"type":"derived-from","url":"https://www.cdc.gov/mmwr/volumes/65/wr/mm6539e1.htm?s_cid\u003dmm6539e1_w"}]}
{"resourceType":"Library","id":"example","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/example\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eChalmydiaScreening_Common\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e2.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eChlamydia Screening Common Library\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003edraft\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eCommon Logic for adherence to Chlamydia Screening guidelines\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eChlamydia Screening\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/library-quick-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eCondition\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003eOther Female Reproductive Conditions\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003elibrary-example-content.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"ChalmydiaScreening_Common"}],"version":"2.0.0","title":"Chlamydia Screening Common Library","status":"draft","type":{"coding":[{"code":"logic-library"}]},"date":"2015-07-22","description":"Common Logic for adherence to Chlamydia Screening guidelines","topic":[{"text":"Chlamydia Screening"}],"relatedArtifact":[{"type":"depends-on","resource":"http://hl7.org/fhir/Library/library-quick-model-definition"}],"dataRequirement":[{"type":"Condition","codeFilter":[{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.464.1003.111.12.1006"}]}],"content":[{"contentType":"text/cql","data":"bGlicmFyeSBDaGxhbXlkaWFTY3JlZW5pbmdfQ29tbW9uIHZlcnNpb24gJzInCgp1c2luZyBRVUlDSwoKdmFsdWVzZXQgIkZlbWFsZSBBZG1pbmlzdHJhdGl2ZSBTZXgiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy41NjAuMTAwLjInCnZhbHVlc2V0ICJPdGhlciBGZW1hbGUgUmVwcm9kdWN0aXZlIENvbmRpdGlvbnMiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMTEuMTIuMTAwNicKdmFsdWVzZXQgIkdlbml0YWwgSGVycGVzIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTEwLjEyLjEwNDknCnZhbHVlc2V0ICJHZW5vY29jY2FsIEluZmVjdGlvbnMgYW5kIFZlbmVyZWFsIERpc2Vhc2VzIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTEyLjEyLjEwMDEnCnZhbHVlc2V0ICJJbmZsYW1tYXRvcnkgRGlzZWFzZXMgb2YgRmVtYWxlIFJlcHJvZHVjdGl2ZSBPcmdhbnMiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMTIuMTIuMTAwNCcKdmFsdWVzZXQgIkNobGFteWRpYSI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjExMi4xMi4xMDAzJwp2YWx1ZXNldCAiSElWIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTIwLjEyLjEwMDMnCnZhbHVlc2V0ICJTeXBoaWxpcyI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjExMi4xMi4xMDAyJwp2YWx1ZXNldCAiQ29tcGxpY2F0aW9ucyBvZiBQcmVnbmFuY3ksIENoaWxkYmlydGggYW5kIHRoZSBQdWVycGVyaXVtIjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTExLjEyLjEwMTInCnZhbHVlc2V0ICJQcmVnbmFuY3kgVGVzdCI6ICcyLjE2Ljg0MC4xLjExMzg4My4zLjQ2NC4xMDAzLjExMS4xMi4xMDExJwp2YWx1ZXNldCAiUGFwIFRlc3QiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMDguMTIuMTAxNycKdmFsdWVzZXQgIkxhYiBUZXN0cyBEdXJpbmcgUHJlZ25hbmN5IjogJzIuMTYuODQwLjEuMTEzODgzLjMuNDY0LjEwMDMuMTExLjEyLjEwMDcnCnZhbHVlc2V0ICJMYWIgVGVzdHMgZm9yIFNleHVhbGx5IFRyYW5zbWl0dGVkIEluZmVjdGlvbnMiOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMTAuMTIuMTA1MScKdmFsdWVzZXQgIkNobGFteWRpYSBTY3JlZW5pbmciOiAnMi4xNi44NDAuMS4xMTM4ODMuMy40NjQuMTAwMy4xMTAuMTIuMTA1MicKCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJDb25kaXRpb25zIEluZGljYXRpbmcgU2V4dWFsIEFjdGl2aXR5IjoKCVsiQ29uZGl0aW9uIjogIk90aGVyIEZlbWFsZSBSZXByb2R1Y3RpdmUgQ29uZGl0aW9ucyJdCgl1bmlvbiBbIkNvbmRpdGlvbiI6ICJHZW5pdGFsIEhlcnBlcyJdCiAgICB1bmlvbiBbIkNvbmRpdGlvbiI6ICJHZW5vY29jY2FsIEluZmVjdGlvbnMgYW5kIFZlbmVyZWFsIERpc2Vhc2VzIl0KICAgIHVuaW9uIFsiQ29uZGl0aW9uIjogIkluZmxhbW1hdG9yeSBEaXNlYXNlcyBvZiBGZW1hbGUgUmVwcm9kdWN0aXZlIE9yZ2FucyJdCiAgICB1bmlvbiBbIkNvbmRpdGlvbiI6ICJDaGxhbXlkaWEiXQogICAgdW5pb24gWyJDb25kaXRpb24iOiAiSElWIl0KICAgIHVuaW9uIFsiQ29uZGl0aW9uIjogIlN5cGhpbGlzIl0KICAgIHVuaW9uIFsiQ29uZGl0aW9uIjogIkNvbXBsaWNhdGlvbnMgb2YgUHJlZ25hbmN5LCBDaGlsZGJpcnRoIGFuZCB0aGUgUHVlcnBlcml1bSJdCgpkZWZpbmUgIkxhYm9yYXRvcnkgVGVzdHMgSW5kaWNhdGluZyBTZXh1YWwgQWN0aXZpdHkiOgogICAgWyJEaWFnbm9zdGljT3JkZXIiOiAiUHJlZ25hbmN5IFRlc3QiXQogICAgdW5pb24gWyJEaWFnbm9zdGljT3JkZXIiOiAiUGFwIFRlc3QiXQogICAgdW5pb24gWyJEaWFnbm9zdGljT3JkZXIiOiAiTGFiIFRlc3RzIER1cmluZyBQcmVnbmFuY3kiXQoJdW5pb24gWyJEaWFnbm9zdGljT3JkZXIiOiAiTGFiIFRlc3RzIGZvciBTZXh1YWxseSBUcmFuc21pdHRlZCBJbmZlY3Rpb25zIl0KCmRlZmluZSAiVGVzdHMgUGVyZm9ybWVkIEZvciBDaGxhbXlkaWEiOgoJWyJEaWFnbm9zdGljUmVwb3J0IjogIkNobGFteWRpYSBTY3JlZW5pbmciXQoKZGVmaW5lICJSZXN1bHRzIFByZXNlbnQgRm9yIENobGFteWRpYSBTY3JlZW5pbmciOgogICAgWyJEaWFnbm9zdGljUmVwb3J0IjogIkNobGFteWRpYSBTY3JlZW5pbmciXSBSIHdoZXJlIFIuInJlc3VsdCIgaXMgbm90IG51bGwK"}]}
{"resourceType":"Library","id":"library-exclusive-breastfeeding-cds-logic","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-exclusive-breastfeeding-cds-logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eExclusive_Breastfeeding_CDS_Logic\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e1.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eExclusive Breastfeeding CDS Logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eactive\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eDecision support logic for improving outcomes for exclusive breastmilk feeding of newborns\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eExclusive Breastfeeding\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/library-quick-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eCondition\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003eSingle Live Birth\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003ehttp://cqlrepository.org/CMS9v4_CDS.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"Exclusive_Breastfeeding_CDS_Logic"}],"version":"1.0.0","title":"Exclusive Breastfeeding CDS Logic","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2016-03-08","description":"Decision support logic for improving outcomes for exclusive breastmilk feeding of newborns","topic":[{"text":"Exclusive Breastfeeding"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/library-quick-model-definition"},{"type":"derived-from","resource":"http://example.org/fhir/Measure/measure-exclusive-breastfeeding"}],"dataRequirement":[{"type":"Condition","codeFilter":[{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.117.1.7.1.25"}]}],"content":[{"contentType":"text/cql","url":"http://cqlrepository.org/CMS9v4_CDS.cql"}]}
{"resourceType":"Library","id":"library-exclusive-breastfeeding-cqm-logic","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-exclusive-breastfeeding-cqm-logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eExclusive_Breastfeeding_CQM_Logic\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e1.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eExclusive Breastfeeding CQM Logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eactive\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eQuality measure logic for measuring outcomes for exclusive breastmilk feeding of newborns\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eExclusive Breastfeeding\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/library-quick-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eCondition\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003eSingle Live Birth\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003ehttp://cqlrepository.org/CMS9v4_CQM.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"Exclusive_Breastfeeding_CQM_Logic"}],"version":"1.0.0","title":"Exclusive Breastfeeding CQM Logic","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2016-03-08","description":"Quality measure logic for measuring outcomes for exclusive breastmilk feeding of newborns","topic":[{"text":"Exclusive Breastfeeding"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/library-quick-model-definition"}],"dataRequirement":[{"type":"Condition","codeFilter":[{"path":"code","valueSet":"urn:oid:2.16.840.1.113883.3.117.1.7.1.25"}]}],"content":[{"contentType":"text/cql","url":"http://cqlrepository.org/CMS9v4_CQM.cql"}]}
{"resourceType":"Library","id":"library-fhir-helpers","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-fhir-helpers\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eFHIRHelpers\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e4.6.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eFHIR Helpers\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eactive\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eFHIR Helpers\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eFHIR Helpers\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/fhir-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etitle: \u003c/b\u003e\n                     \u003cspan\u003eFHIR Helpers\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003elibrary-fhir-helpers-content.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"FHIRHelpers"}],"version":"4.6.0","title":"FHIR Helpers","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2018-11-10","description":"FHIR Helpers","topic":[{"text":"FHIR Helpers"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/fhir-model-definition"},{"type":"predecessor","resource":"http://example.org/fhir/Library/library-fhir-helpers-predecessor"}],"content":[{"contentType":"text/cql","data":"\u003d\u003d","url":"library-fhir-helpers-content.cql","title":"FHIR Helpers"}]}
{"resourceType":"Library","id":"library-fhir-model-definition","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-fhir-model-definition\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eFHIR\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e4.6.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eFHIR Model Definition\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003emodel-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003edraft\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eModel definition for the FHIR Model\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eFHIR\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003eapplication/xml\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003ehttp://cqlrepository.org/fhirmodel-modelinfo.xml\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"FHIR"}],"version":"4.6.0","title":"FHIR Model Definition","status":"draft","type":{"coding":[{"code":"model-definition"}]},"date":"2016-07-08","description":"Model definition for the FHIR Model","topic":[{"text":"FHIR"}],"content":[{"contentType":"application/xml","data":"","url":"http://cqlrepository.org/fhirmodel-modelinfo.xml"}]}
{"resourceType":"Library","id":"hiv-indicators","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDerived From\u003c/td\u003e\n          \u003ctd\u003ehttp://wiki.ihe.net/index.php/Aggregate_Data_Exchange_-_HIV\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003etext/cql\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-sql\"\u003elibrary HIV_Indicators version \u00270.0.0\u0027\n\n/*\nThe content in this library is draft content developed as part of a working OpenHIE\nsession on the use of FHIR quality reporting functionality to report public health\nindicators: https://wiki.ihe.net/index.php/Aggregate_Data_Exchange_-_HIV\n*/\n\nusing FHIR version \u00273.0.0\u0027\n\ninclude FHIRHelpers version \u00273.0.0\u0027\n\n// SNOMED-CT, International Edition\ncodesystem \u0026quot;SNOMED-CT\u0026quot;: \u0027http://snomed.info/sct/900000000000207008\u0027\n\n// LOINC, 2.63+\ncodesystem \u0026quot;LOINC\u0026quot;: \u0027http://loinc.org\u0027\n\ncodesystem \u0026quot;ISO-8601-Derived Periods\u0026quot;: \u0027http://ohie.org/ValueSet/iso-8601-derived-periods\u0027 // { \u0027P0Y--P1Y\u0027, \u0027P1Y--P5Y\u0027, ... }\ncodesystem \u0026quot;PMTCT HIV Status Codes\u0026quot;: \u0027TBD\u0027 // { \u0027known-positive\u0027, \u0027newly-identified-positive\u0027, \u0027newly-identified-negative\u0027 }\ncodesystem \u0026quot;PMTCT ART Status Codes\u0026quot;: \u0027TBD\u0027 // { \u0027already-on-art\u0027, \u0027new-on-art\u0027 }\n\nvalueset \u0026quot;HIV Testing Services\u0026quot;: \u0027TBD\u0027 // Should use HIV tests\nvalueset \u0026quot;Viral Load Test\u0026quot;: \u0027TBD\u0027\nvalueset \u0026quot;HL7 Administrative Gender\u0026quot;: \u0027http://hl7.org/fhir/ValueSet/administrative-gender\u0027\nvalueset \u0026quot;ART Medications\u0026quot;: \u0027TBD\u0027 // ART medications\nvalueset \u0026quot;Antenatal Care\u0026quot;: \u0027TBD\u0027 // Antenatal Care\nvalueset \u0026quot;Pregnancy Codes\u0026quot;: \u0027TBD\u0027 // Pregnancy\nvalueset \u0026quot;Live Birth\u0026quot;: \u0027TBD\u0027 // Live Birth\nvalueset \u0026quot;Breastfeeding Codes\u0026quot;: \u0027TBD\u0027 // Breastfeeding\nvalueset \u0026quot;Delivery Procedures\u0026quot;: \u0027urn:oid:2.16.840.1.113762.1.4.1045.59\u0027 // Used by CMS113\nvalueset \u0026quot;Human Immunodeficiency Virus (HIV) Laboratory Test Codes (Ab and Ag)\u0026quot;: \u0027urn:oid:2.16.840.1.113762.1.4.1056.50\u0027 // Used by CMS349\n\n//. HIV Test Results\ncode \u0026quot;HIV Negative\u0026quot;: \u0027165815009\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027HIV Negative\u0027\ncode \u0026quot;HIV Positive\u0026quot;: \u0027165816005\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027HIV Positive\u0027\ncode \u0026quot;HIV 1 and 2 tests - Meaningful Use set\u0026quot;: \u002775622-1\u0027 from \u0026quot;LOINC\u0026quot; display \u0027HIV 1 and 2 tests - Meaningful Use set\u0027 // Used by CMS349\n\n// History of ART Therapy\ncode \u0026quot;History of antiretroviral therapy (situation)\u0026quot;: \u0027432101000124108\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027History of antiretroviral therapy (situation)\u0027\n\n// Age Groups\ncode \u0026quot;P0Y--P1Y\u0026quot;: \u0027P0Y--P1Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u0027\u0026lt; 1 year\u0027\ncode \u0026quot;P1Y--P5Y\u0026quot;: \u0027P1Y--P5Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u00271-4 years\u0027\ncode \u0026quot;P5Y--P10Y\u0026quot;: \u0027P5Y--P10Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u00275-9 year\u0027\ncode \u0026quot;P10Y--P15Y\u0026quot;: \u0027P10Y--P15Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002710-14 year\u0027\ncode \u0026quot;P15Y--P20Y\u0026quot;: \u0027P15Y--P20Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002715-19 year\u0027\ncode \u0026quot;P20Y--P25Y\u0026quot;: \u0027P20Y--P25Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002720-24 year\u0027\ncode \u0026quot;P25Y--P30Y\u0026quot;: \u0027P25Y--P30Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002725-29 year\u0027\ncode \u0026quot;P30Y--P35Y\u0026quot;: \u0027P30Y--P35Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002730-34 year\u0027\ncode \u0026quot;P35Y--P40Y\u0026quot;: \u0027P35Y--P40Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002735-39 year\u0027\ncode \u0026quot;P40Y--P50Y\u0026quot;: \u0027P40Y--P50Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002740-49 year\u0027\ncode \u0026quot;P50Y--P9999Y\u0026quot;: \u0027P50Y--P9999Y\u0027 from \u0026quot;ISO-8601-Derived Periods\u0026quot; display \u002750+ years\u0027\n\n// PMTCT ART status\ncode \u0026quot;Already on ART\u0026quot;: \u0027already-on-art\u0027 from \u0026quot;PMTCT ART Status Codes\u0026quot; display \u0027Already on ART\u0027\ncode \u0026quot;New on ART\u0026quot;: \u0027new-on-art\u0027 from \u0026quot;PMTCT ART Status Codes\u0026quot; display \u0027New on ART\u0027\n\n// PMTCT HIV status\ncode \u0026quot;Known Positive\u0026quot;: \u0027known-positive\u0027 from \u0026quot;PMTCT HIV Status Codes\u0026quot; display \u0027Known Positive\u0027\ncode \u0026quot;Newly Identified Positive\u0026quot;: \u0027newly-identified-positive\u0027 from \u0026quot;PMTCT HIV Status Codes\u0026quot; display \u0027Newly Identified Positive\u0027\ncode \u0026quot;Newly Identified Negative\u0026quot;: \u0027newly-identified-negative\u0027 from \u0026quot;PMTCT HIV Status Codes\u0026quot; display \u0027Newly Identified Negative\u0027\n\n// Pregnancy/Breastfeeding (PREG_BF)\ncode \u0026quot;Pregnant\u0026quot;: \u0027146789000\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Pregnant\u0027\ncode \u0026quot;Breastfeeding\u0026quot;: \u0027169750002\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Breastfeeding\u0027\n\nparameter \u0026quot;Measurement Period\u0026quot; Interval\u0026lt;DateTime\u0026gt;\n\ncontext Patient\n\ndefine \u0026quot;ART Therapy Observation\u0026quot;:\n  [\u0026quot;Observation\u0026quot;: \u0026quot;History of antiretroviral therapy (situation)\u0026quot;] O\n    where O.status \u003d \u0027final\u0027\n\ndefine \u0026quot;ART Therapy Condition\u0026quot;:\n  [\u0026quot;Condition\u0026quot;: \u0026quot;History of antiretroviral therapy (situation)\u0026quot;] C\n    where C.verificationStatus \u003d \u0027confirmed\u0027\n      and C.clinicalStatus in { \u0027active\u0027, \u0027relapsed\u0027, \u0027well-controlled\u0027, \u0027poorly-controlled\u0027 }\n\ndefine \u0026quot;ART Therapy Medication\u0026quot;:\n  [\u0026quot;MedicationDispense\u0026quot;: \u0026quot;ART Medications\u0026quot;] M\n    where M.status \u003d \u0027completed\u0027\n\ndefine \u0026quot;ART Dates\u0026quot;:\n  (\u0026quot;ART Therapy Observation\u0026quot; O return O.effective as dateTime)\n    union (\u0026quot;ART Therapy Condition\u0026quot; C return C.onset as dateTime)\n    union (\u0026quot;ART Therapy Medication\u0026quot; M return M.whenHandedOver)\n\ndefine \u0026quot;Date of First Evidence of ART\u0026quot;:\n  Min(\u0026quot;ART Dates\u0026quot;)\n\n// PMTCT ART status\ndefine \u0026quot;PMTCT ART Status\u0026quot;:\n  case\n    when \u0026quot;Date of First Evidence of ART\u0026quot; before start of \u0026quot;Measurement Period\u0026quot; then \u0026quot;Already on ART\u0026quot;\n    when \u0026quot;Date of First Evidence of ART\u0026quot; during \u0026quot;Measurement Period\u0026quot; then \u0026quot;New on ART\u0026quot;\n    else null\n  end\n\n//code \u0026quot;Already on ART\u0026quot;: \u0027432101000124108\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Already on ART\u0027\n//code \u0026quot;New on ART\u0026quot;: \u0027432101000124108*\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027New on ART\u0027\n\ndefine \u0026quot;On ART\u0026quot;:\n  exists (\u0026quot;ART Dates\u0026quot; D where D during \u0026quot;Measurement Period\u0026quot;)\n    or exists (\n      \u0026quot;ART Therapy Condition\u0026quot; C\n        where Interval[C.onset, C.abatement] overlaps \u0026quot;Measurement Period\u0026quot;\n    )\n\ndefine \u0026quot;HIV Test Observation\u0026quot;:\n  (\n    [Observation: \u0026quot;Human Immunodeficiency Virus (HIV) Laboratory Test Codes (Ab and Ag)\u0026quot;]\n      union [Observation: \u0026quot;HIV 1 and 2 tests - Meaningful Use set\u0026quot;]\n  ) O\n    where O.status \u003d \u0027final\u0027\n      and O.value is not null\n\ndefine \u0026quot;HIV Positive Observation\u0026quot;:\n  \u0026quot;HIV Test Observation\u0026quot; O where O.value ~ \u0026quot;HIV Positive\u0026quot;\n\ndefine \u0026quot;HIV Negative Observation\u0026quot;:\n  \u0026quot;HIV Test Observation\u0026quot; O where O.value ~ \u0026quot;HIV Negative\u0026quot;\n\ndefine \u0026quot;Is HIV Positive\u0026quot;:\n  exists (\u0026quot;HIV Positive Observation\u0026quot;)\n\ndefine \u0026quot;Is HIV Negative\u0026quot;:\n  exists (\u0026quot;HIV Negative Observation\u0026quot;)\n\ndefine \u0026quot;Date of First Evidence of HIV Status\u0026quot;:\n  Min(\u0026quot;HIV Test Observation\u0026quot; O return O.effective)\n\ndefine \u0026quot;Date of First Evidence of HIV Positive\u0026quot;:\n  Min(\u0026quot;HIV Positive Observation\u0026quot; O return O.effective)\n\ndefine \u0026quot;Date of First Evidence of HIV Negative\u0026quot;:\n  Min(\u0026quot;HIV Negative Observation\u0026quot; O return O.effective)\n\n// PMTCT HIV Status\ndefine \u0026quot;PMTCT HIV Status\u0026quot;:\n  case\n    when \u0026quot;Date of First Evidence of HIV Positive\u0026quot; before start of \u0026quot;Measurement Period\u0026quot; then \u0027Known Positive\u0027\n    when \u0026quot;Date of First Evidence of HIV Positive\u0026quot; during \u0026quot;Measurement Period\u0026quot; then \u0027Newly Identified Positive\u0027\n    when \u0026quot;Date of First Evidence of HIV Negative\u0026quot; during \u0026quot;Measurement Period\u0026quot; then \u0027Newly Identified Negative\u0027\n    else null\n  end\n\n//code \u0026quot;Known HIV positive\u0026quot;: code \u0027165816005**\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Known HIV positive\u0027\n//code \u0026quot;Newly identified HIV Positive\u0026quot;: code \u0027165816005*\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Newly identified HIV Positive\u0027\n//code \u0026quot;Newly identified HIV negative\u0026quot;: code \u0027165815009*\u0027 from \u0026quot;SNOMED-CT\u0026quot; display \u0027Newly identified HIV negative\u0027\n\n// QRPH_ADX_ART1_N:\n// Number of adults and children newly enrolled on antiretroviral therapy (ART) in the reporting period\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Newly enrolled on antiretroviral therapy (ART) during measurement period\u0026quot;:\n  \u0026quot;Date of First Evidence of ART\u0026quot; during \u0026quot;Measurement Period\u0026quot;\n\ndefine \u0026quot;Is Pregnant\u0026quot;:\n  exists ([Condition: \u0026quot;Pregnancy Codes\u0026quot;] C\n    where C.verificationStatus \u003d \u0027confirmed\u0027\n      and C.clinicalStatus \u003d \u0027active\u0027\n      and C.onset during \u0026quot;Measurement Period\u0026quot;\n  )\n\ndefine \u0026quot;Is Breastfeeding\u0026quot;:\n  exists ([Observation: \u0026quot;Breastfeeding Codes\u0026quot;] O\n    where O.status \u003d \u0027final\u0027\n      and O.effective during \u0026quot;Measurement Period\u0026quot;\n  )\n\n// QRPH_ADX_ART1_N_PREG_BF:\n// Number of adults and children newly enrolled on ART in the reporting period_pregnant and breastfeeding\n  // Stratifiers: PREG_BF\ndefine \u0026quot;Newly enrolled on antiretroviral therapy (ART) during measurement period (pregnant and breastfeeding)\u0026quot;:\n  \u0026quot;Is Pregnant\u0026quot; and \u0026quot;Is Breastfeeding\u0026quot; and \u0026quot;Date of First Evidence of ART\u0026quot; during \u0026quot;Measurement Period\u0026quot;\n\n// QRPH_ADX_ART3_N:\n// Number of adults and children currently receiving antiretroviral therapy (ART)\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Receiving antiretroviral therapy (ART) during measurement period\u0026quot;:\n  exists (\u0026quot;ART Dates\u0026quot; D where D during \u0026quot;Measurement Period\u0026quot;)\n    or exists (\n      \u0026quot;ART Therapy Condition\u0026quot; C\n        where Interval[C.onset, C.abatement] overlaps \u0026quot;Measurement Period\u0026quot;\n    )\n\ndefine \u0026quot;Year Preceding the Measurement Period\u0026quot;:\n  Interval[start of \u0026quot;Measurement Period\u0026quot; - 1 year, start of \u0026quot;Measurement Period\u0026quot;)\n\ndefine \u0026quot;Month Before the Year Preceding the Measurement Period\u0026quot;:\n  Interval[start of \u0026quot;Year Preceding the Measurement Period\u0026quot; - 1 month, start of \u0026quot;Year Preceding the Measurement Period\u0026quot;)\n\n// QRPH_ADX_ART5_N:\n// Number of adults and children who are still on treatment at 12 months after initiating ART\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Receiving antiretroviral therapy (ART) at 12 months after initiating\u0026quot;:\n  \u0026quot;Date of First Evidence of ART\u0026quot; during \u0026quot;Month Before the Year Preceding the Measurement Period\u0026quot;\n    and \u0026quot;Receiving antiretroviral therapy (ART) during measurement period\u0026quot;\n\n// QRPH_ADX_ART5_N_PREG_BF:\n// Number of adults and children who are still on treatment at 12 months after initiating ART-pregnant and breastfeeding\n  // Stratifiers: PREG_BF\ndefine \u0026quot;Receiving antiretroviral therapy (ART) at 12 months after initiating (pregnant and breastfeeding)\u0026quot;:\n  \u0026quot;Receiving antiretroviral therapy (ART) at 12 months after initiating\u0026quot;\n    and \u0026quot;Is Pregnant\u0026quot;\n    and \u0026quot;Is Breastfeeding\u0026quot;\n\n// QRPH_ADX_ART5_D:\n// Number of adults and children who initiated ART in the 12 months prior to the beginning of the reporting period\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Initiated antiretroviral therapy (ART) in the 12 months prior to measurement period\u0026quot;:\n  \u0026quot;Date of First Evidence of ART\u0026quot; during \u0026quot;Year Preceding the Measurement Period\u0026quot;\n\ndefine \u0026quot;Antenatal Care Visit\u0026quot;:\n  [Encounter: \u0026quot;Antenatal Care\u0026quot;] E\n    where E.status \u003d \u0027finished\u0027\n      and E.period during Interval[start of \u0026quot;Year Preceding the Measurement Period\u0026quot;, end of \u0026quot;Measurement Period\u0026quot;]\n\ndefine \u0026quot;Live Birth Procedure\u0026quot;:\n  [Procedure: \u0026quot;Live Birth\u0026quot;] P\n    where P.status \u003d \u0027completed\u0027\n\n// QRPH_ADX_MTCT1_D:\n// Number of pregnant women who attended ANC or had a facility-based delivery in the reporting period\n // Stratifiers: PMTCT_HIV_STATUS\ndefine \u0026quot;Antenatal Care Visit or Live Birth during the Measurement Period\u0026quot;:\n  (\u0026quot;Is Pregnant\u0026quot; and exists (\u0026quot;Antenatal Care Visit\u0026quot; V where V.period during \u0026quot;Measurement Period\u0026quot;))\n    or exists (\u0026quot;Live Birth Procedure\u0026quot; P where P.performed during \u0026quot;Measurement Period\u0026quot;)\n\n// QRPH_ADX_MTCT2_D:\n// Number of HIV positive pregnant women who attended ANC or had a facility-based delivery within the reporting period\n  // Stratifiers: None\ndefine \u0026quot;Antenatal Care Visit or Live Birth during Measurement Period (HIV Positive)\u0026quot;:\n  \u0026quot;Is HIV Positive\u0026quot;\n    and \u0026quot;Antenatal Care Visit or Live Birth during the Measurement Period\u0026quot;\n\n// QRPH_ADX_MTCT2_N:\n// Number of HIV-positive pregnant women who received ART to reduce the risk of mother-to-child-transmission during pregnancy\n  // Stratifiers: PMTCT_ART_STATUS\ndefine \u0026quot;HIV-positive, pregnant, and receiving antiretroviral therapy (ART) to reduce the risk of mother-to-child-transmission during pregnancy\u0026quot;:\n  \u0026quot;Is HIV Positive\u0026quot;\n    and \u0026quot;Is Pregnant\u0026quot;\n    and \u0026quot;Receiving antiretroviral therapy (ART) during measurement period\u0026quot;\n\ndefine \u0026quot;Viral Load Test Result\u0026quot;:\n  [\u0026quot;Observation\u0026quot;: \u0026quot;Viral Load Test\u0026quot;] O\n    where O.status \u003d \u0027final\u0027\n      and O.value is not null\n\n// QRPH_ADX_VLS3_N:\n// Number of people living with HIV and on ART who have a suppressed viral load results (\u0026amp;lt;1000 copies/mL).\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Living with HIV and on ART with suppressed viral load results (\u0026lt;1000 copies/mL)\u0026quot;:\n  \u0026quot;Is HIV Positive\u0026quot;\n    and \u0026quot;Receiving antiretroviral therapy (ART) during measurement period\u0026quot;\n    and exists (\n      \u0026quot;Viral Load Test Result\u0026quot; R\n        where R.effective during \u0026quot;Measurement Period\u0026quot;\n          and R.value \u0026lt; 1000 \u0027{copies}/mL\u0027\n      )\n\n// QRPH_ADX_HTS2_N:\n// Number of individuals who received HIV Testing Services (HTS) and received their test results\n  // Stratifiers: AGE_GROUP,SEX,HIV_TEST_RESULTS\ndefine \u0026quot;Received HIV Testing Services (HTS) and Recevied Test Results\u0026quot;:\n  [\u0026quot;Observation\u0026quot;: \u0026quot;HIV Testing Services\u0026quot;] O\n    where O.status \u003d \u0027final\u0027\n      and O.value is not null\n\ndefine \u0026quot;First antenatal care visit\u0026quot;:\n  First(\u0026quot;Antenatal Care Visit\u0026quot; V sort by start of period)\n\n// QRPH_ADX_MTCT1_N:\n// Number of pregnant women with known HIV status at first antenatal care visit\n  // Stratifiers: PMTCT_HIV_STATUS\ndefine \u0026quot;HIV Status Known at First Antenatal Care Visit\u0026quot;:\n  \u0026quot;Date of First Evidence of HIV Status\u0026quot; on or before start of \u0026quot;First antenatal care visit\u0026quot;.period\n\n// QRPH_ADX_VLS3_D:\n// Number of people on ART who had a VL measurement in the past 12 months.\n  // Stratifiers: AGE_GROUP,SEX\ndefine \u0026quot;Receiving antiretroviral therapty (ART) and Viral Load Measurement in the past 12 months\u0026quot;:\n  \u0026quot;Receiving antiretroviral therapy (ART) during measurement period\u0026quot;\n    and exists (\n      \u0026quot;Viral Load Test Result\u0026quot; R\n        where R.effective during \u0026quot;Year Preceding the Measurement Period\u0026quot;\n    )\n\n\n// Stratifiers\n\n// Age Group\ndefine \u0026quot;Age Group\u0026quot;:\n  case\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[0, 1) then \u0026quot;P0Y--P1Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[1, 5) then \u0026quot;P1Y--P5Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[5, 10) then \u0026quot;P5Y--P10Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[10, 15) then \u0026quot;P10Y--P15Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[15, 20) then \u0026quot;P15Y--P20Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[20, 25) then \u0026quot;P20Y--P25Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[25, 30) then \u0026quot;P25Y--P30Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[30, 35) then \u0026quot;P30Y--P35Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[35, 40) then \u0026quot;P35Y--P40Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[40, 50) then \u0026quot;P40Y--P50Y\u0026quot;\n    when AgeInYearsAt(start of \u0026quot;Measurement Period\u0026quot;) in Interval[50, null] then \u0026quot;P50Y--P9999Y\u0026quot;\n    else null\n  end\n\n// Sex\ndefine \u0026quot;Sex\u0026quot;: Patient.gender\n\n// Age Group/Sex\ndefine \u0026quot;Age Group/Sex\u0026quot;: \u0026quot;Age Group\u0026quot;.code + \u0027:\u0027 + \u0026quot;Sex\u0026quot;\n\n// Pregnant/Breastfeeding\ndefine \u0026quot;Pregnant/Breastfeeding\u0026quot;:\n  case\n    when \u0026quot;Is Pregnant\u0026quot; then \u0026quot;Pregnant\u0026quot;\n    when \u0026quot;Is Breastfeeding\u0026quot; then \u0026quot;Breastfeeding\u0026quot;\n    else null\n  end\n\n// HIV Test Results\ndefine \u0026quot;HIV Test Results\u0026quot;:\n  case\n    when \u0026quot;Is HIV Positive\u0026quot; then \u0026quot;HIV Positive\u0026quot;\n    when \u0026quot;Is HIV Negative\u0026quot; then \u0026quot;HIV Negative\u0026quot;\n    else null\n  end\n\ndefine \u0026quot;Age Group/Sex/HIV Test Results\u0026quot;:\n  \u0026quot;Age Group\u0026quot;.code + \u0027:\u0027 + \u0026quot;Sex\u0026quot; + \u0027:\u0027 + \u0026quot;HIV Test Results\u0026quot;.code\n\u003c/code\u003e\n      \u003c/pre\u003e\n      \u003cp\u003e\n        \u003ccode\u003eContent not shown - (\u003c/code\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e, size \u003d 169Kb)\n      \u003c/p\u003e\n    \u003c/div\u003e"},"url":"http://ohie.org/Library/hiv-indicators","identifier":[{"system":"http://ohie.org/Library/","value":"hiv-indicators"}],"version":"0.0.0","title":"HIV Indicators","status":"draft","experimental":true,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-08-03","description":"HIV Indicators Reporting Example","relatedArtifact":[{"type":"derived-from","url":"http://wiki.ihe.net/index.php/Aggregate_Data_Exchange_-_HIV"}],"content":[{"contentType":"text/cql","data":"\u003d","url":"library-hiv-indicators-content.cql"},{"contentType":"application/elm+xml","data":"\u003d\u003d"}]}
{"resourceType":"Library","id":"suiciderisk-orderset-logic","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/mmi-suiciderisk-orderset-logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eSuicideRiskLogic\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e1.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eSuicide Risk Order Set Logic\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003edraft\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLogic for Suicide Risk Order Sets\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eSuicide Risk Order Set Logic\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/library-fhir-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/library-fhir-helpers\u003c/span\u003e\n                           \u003cbr/\u003e\n                        \u003c/span\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003edisplay: \u003c/b\u003e\n                           \u003cspan\u003eFHIRHelpers\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003ehttp://nucc.org/provider-taxonomy\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eValueSet/1.2.3.4.5\u003c/span\u003e\n                           \u003cbr/\u003e\n                        \u003c/span\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003edisplay: \u003c/b\u003e\n                           \u003cspan\u003eSuicide Risk Assessment\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eParameter: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003ename: \u003c/b\u003e\n                     \u003cspan\u003ePatient\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003euse: \u003c/b\u003e\n                  \u003cspan\u003ein\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003eminimum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003emaximum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003etype: \u003c/b\u003e\n                  \u003cspan\u003ePatient\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"/\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eParameter: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003ename: \u003c/b\u003e\n                     \u003cspan\u003eEncounter\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003euse: \u003c/b\u003e\n                  \u003cspan\u003ein\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003eminimum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003emaximum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003etype: \u003c/b\u003e\n                  \u003cspan\u003eEncounter\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"/\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eParameter: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003ename: \u003c/b\u003e\n                     \u003cspan\u003ePractitioner\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003euse: \u003c/b\u003e\n                  \u003cspan\u003ein\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003eminimum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cspan\u003e\n                     \u003cb\u003emaximum cardinality: \u003c/b\u003e\n                     \u003cspan\u003e1\u003c/span\u003e\n                     \u003cbr/\u003e\n                  \u003c/span\u003e\n                  \u003cb\u003etype: \u003c/b\u003e\n                  \u003cspan\u003ePractitioner\u003c/span\u003e\n                  \u003cbr/\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"/\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eData Requirements: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cdiv\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003etype: \u003c/b\u003e\n                        \u003cspan\u003eRiskAssessment\u003c/span\u003e\n                     \u003c/p\u003e\n                     \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                        \u003cb\u003ecode filter:\u003c/b\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003epath: \u003c/b\u003e\n                           \u003cspan\u003ecode\u003c/span\u003e\n                        \u003c/span\u003e\n                        \u003cbr/\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003evalueset: \u003c/b\u003e\n                           \u003cspan\u003eSuicide Risk Assessment\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/p\u003e\n                  \u003c/div\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003elibrary-mmi-suiciderisk-orderset-logic-content.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"url":"http://motivemi.com/artifacts/Library/suiciderisk-orderset-logic","identifier":[{"use":"official","system":"http://motivemi.com/artifacts","value":"mmi:suiciderisk-orderset-logic"}],"version":"1.0.0","name":"SuicideRiskOrderSetLogic","title":"Suicide Risk Order Set Logic","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2015-07-22","publisher":"Motive Medical Intelligence","contact":[{"telecom":[{"system":"phone","value":"415-362-4007","use":"work"},{"system":"email","value":"info@motivemi.com","use":"work"}]}],"description":"Logic for Suicide Risk Order Sets","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"age"},"valueCodeableConcept":{"coding":[{"system":"https://meshb.nlm.nih.gov","code":"D000328","display":"Adult"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"87512008","display":"Mild major depression"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"40379007","display":"Major depression, recurrent, mild"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"225444004","display":"At risk for suicide (finding)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"user"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"309343006","display":"Physician"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"venue"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"440655000","display":"Outpatient environment"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US"}]}],"purpose":"Defines a referral to a mental-health integrated care program for use in suicide risk order sets. The definition is independent of the order set in which it appears to allow reuse of the general definition of the referrral.","usage":"This activity definition is used as the definition of a referral request within various suicide risk order sets. Elements that apply universally are defined here, while elements that apply to the specific setting of a referral within a particular order set are defined in the order set.","copyright":"© Copyright 2016 Motive Medical Intelligence. All rights reserved.","approvalDate":"2016-03-12","lastReviewDate":"2016-08-15","effectivePeriod":{"start":"2016-01-01","end":"2017-12-31"},"topic":[{"text":"Suicide Risk Order Set Logic"}],"author":[{"name":"Motive Medical Intelligence","telecom":[{"system":"phone","value":"415-362-4007","use":"work"},{"system":"email","value":"info@motivemi.com","use":"work"}]}],"relatedArtifact":[{"type":"citation","display":"Practice Guideline for the Treatment of Patients with Major Depressive Disorder","url":"http://psychiatryonline.org/pb/assets/raw/sitewide/practice_guidelines/guidelines/mdd.pdf"},{"type":"depends-on","resource":"http://hl7.org/fhir/Library/library-fhir-model-definition"},{"type":"depends-on","resource":"http://hl7.org/fhir/Library/library-fhir-helpers"},{"type":"depends-on","resource":"http://nucc.org/provider-taxonomy"},{"type":"depends-on","resource":"http://hl7.org/fhir/ValueSet/1.2.3.4.5"}],"parameter":[{"name":"Patient","use":"in","min":1,"max":"1","type":"Patient"},{"name":"Encounter","use":"in","min":1,"max":"1","type":"Encounter"},{"name":"Practitioner","use":"in","min":1,"max":"1","type":"Practitioner"}],"dataRequirement":[{"type":"RiskAssessment","codeFilter":[{"path":"code","valueSet":"http://example.org/valueset/1.2.3.4.5"}]}],"content":[{"contentType":"text/cql","data":"\u003d"}]}
{"resourceType":"Library","id":"omtk-logic","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/omtk-modelinfo\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eMME Conversion Tables\u003c/td\u003e\n          \u003ctd\u003ehttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003etext/cql\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-sql\"\u003elibrary OMTKLogic version \u00270.1.0\u0027\n\nusing OMTK version \u00270.1.0\u0027\n\ncodesystem RxNorm: \u0027http://www.nlm.nih.gov/research/umls/rxnorm\u0027\n\n//define MED_DOSE_FORMS: [MED_DOSE_FORM]\n\n// Given an RxNorm Code:\n// NON_SURGICAL_OPIOID_TO_INCLUDE.DRUG_RXCUI\n// MED_DRUG.DRUG_RXCUI\n// MED_SCDC_FOR_DRUG.DRUG_RXCUI -\u0026gt; SCDC_RXCUI\n// MED_SCDC.SCDC_RXCUI (STRENGTH, STRENGTH_VALUE, STRENGTH_UNIT)\n// MED_INGREDIENT_FOR_SCDC.SCDC_RXCUI -\u0026gt; INGREDIENT_RXCUI\n// MED_INGREDIENT.INGREDIENT_RXCUI\n// MED_INGREDIENT_TYPE.INGREDIENT_RXCUI (INGREDIENT_TYPE \u003d \u0027NonSurgicalOpioid\u0027)\n\n/*\n SQL -\u0026gt;\nselect D.DRUG_RXCUI, D.DRUG_NAME, DF.DOSE_FORM_NAME, SCDCD.SCDC_RXCUI, SCDC.SCDC_NAME, SCDC.STRENGTH, SCDC.STRENGTH_VALUE, SCDC.STRENGTH_UNIT, I.INGREDIENT_RXCUI, I.INGREDIENT_NAME\n  from MED_DRUG D\n    join NON_SURGICAL_OPIOID_TO_INCLUDE NSO on D.DRUG_RXCUI \u003d NSO.DRUG_RXCUI\n    join MED_SCDC_FOR_DRUG SCDCD on D.DRUG_RXCUI \u003d SCDCD.DRUG_RXCUI\n    join MED_SCDC SCDC on SCDCD.SCDC_RXCUI \u003d SCDC.SCDC_RXCUI\n    join MED_INGREDIENT_FOR_SCDC SCDCI on SCDC.SCDC_RXCUI \u003d SCDCI.SCDC_RXCUI\n    join MED_INGREDIENT I on SCDCI.INGREDIENT_RXCUI \u003d I.INGREDIENT_RXCUI\n    join MED_INGREDIENT_TYPE IT on I.INGREDIENT_RXCUI \u003d IT.INGREDIENT_RXCUI\n\tleft join MED_DRUG_DOSE_FORM DDF on D.DRUG_RXCUI \u003d DDF.DRUG_RXCUI\n\tleft join MED_DOSE_FORM DF on DDF.DOSE_FORM_RXCUI \u003d DF.DOSE_FORM_RXCUI\n\t--Most of the drugs have multiple dose form groups...\n\t--left join MED_DRUG_DOSE_FORM_GROUP DDFG on D.DRUG_RXCUI \u003d DDFG.DRUG_RXCUI\n\t--left join MED_DOSE_FORM_GROUP DFG on DDFG.DOSE_FORM_GROUP_RXCUI \u003d DFG.DOSE_FORM_GROUP_RXCUI\n  where D.DRUG_RXCUI \u003d @RxNormCode // 197696\n    and IT.INGREDIENT_TYPE \u003d \u0027NonSurgicalOpioid\u0027\n*/\n\n/*\n  CQL, assuming translation to SQL:\n\n  from\n    [MED_DRUG: rxNormCode] D,\n    [NON_SURGICAL_OPIOID_TO_INCLUDE] NSO,\n    [MED_SCDC_FOR_DRUG] SCDCD,\n    [MED_SCDC] SCDC,\n    [MED_INGREDIENT_FOR_SCDC] SCDCI,\n    [MED_INGREDIENT] I,\n    [MED_INGREDIENT_TYPE] IT,\n    [MED_DRUG_DOSE_FORM] DDF,\n    [MED_DOSE_FORM] DF\n  where D.DRUG_RXCUI \u003d NSO.DRUG_RXCUI\n    and D.DRUG_RXCUI \u003d SCDCD.DRUG_RXCUI\n    and SCDCD.SCDC_RXCUI \u003d SCDC.SCDC_RXCUI\n    and SCDC.SCDC_RXCUI \u003d SCDCI.SCDC_RXCUI\n    and SDCDI.INGREDIENT_RXCUI \u003d I.INGREDIENT_RXCUI\n    and I.INGREDIENT_RXCUI \u003d IT.INGREDIENT_RXCUI\n    and D.DRUG_RXCUI \u003d DDF.DRUG_RXCUI\n    and DDF.DOSE_FORM_RXCUI \u003d DF.DOSE_FORM_RXCUI\n    and IT.INGREDIENT_TYPE \u003d \u0027NonSurgicalOpioid\u0027\n*/\n\n/*\nAn engine with a naive implementation for multi-source queries would perform\npretty horribly here, so rewrite it using \u0026quot;syntactic optimization\u0026quot; :)\n*/\n\n/*\n  Normalizes the input units to UCUM units\n  \n  Note guidance for UCUM presentation of medication units from SNOMED here:\n  https://www.google.com/url?sa\u003dt\u0026amp;rct\u003dj\u0026amp;q\u003d\u0026amp;esrc\u003ds\u0026amp;source\u003dweb\u0026amp;cd\u003d1\u0026amp;cad\u003drja\u0026amp;uact\u003d8\u0026amp;ved\u003d0ahUKEwjU3vLpicPTAhWFMGMKHRpOBUAQFggiMAA\u0026amp;url\u003dhttps%3A%2F%2Fconfluence.ihtsdotools.org%2Fdownload%2Fattachments%2F17859188%2FExpressing%2520Units%2520of%2520Measure%2520for%2520Medicinal%2520Products.doc%3Fapi%3Dv2\u0026amp;usg\u003dAFQjCNE5sboicqvJDUyXJ2im8VzBpgHE8A\n  \n  The values listed here are the only ones currently present in the OMTK data\n  \n  Based on the HL7 UCUM subset here:\n  http://download.hl7.de/documents/ucum/ucumdata.html\n*/\ndefine function ToUCUM(unit String):\n  case unit\n    when \u0027MG\u0027 then \u0027mg\u0027\n    when \u0027MG/ACTUAT\u0027 then \u0027mg/{actuat}\u0027\n    when \u0027MG/HR\u0027 then \u0027mg/h\u0027\n    when \u0027MG/ML\u0027 then \u0027mg/mL\u0027\n    else \u0027unknown{\u0027 + unit + \u0027}\u0027 // Should probably be an error\n  end\n\n/*\n  Calculates daily frequency given frequency within a period\n*/\ndefine function ToDaily(frequency Integer, period System.Quantity):\n  case period.unit\n    when \u0027h\u0027 then frequency * (24.0 / period.value)\n    when \u0027min\u0027 then frequency * (24.0 / period.value) * 60\n    when \u0027s\u0027 then frequency * (24.0 / period.value) * 60 * 60\n    when \u0027d\u0027 then frequency * (24.0 / period.value) / 24\n    when \u0027wk\u0027 then frequency * (24.0 / period.value) / (24 * 7)\n    when \u0027mo\u0027 then frequency * (24.0 / period.value) / (24 * 30) // assuming 30 days in month\n    when \u0027a\u0027 then frequency * (24.0 / period.value) / (24 * 365) // assuming 365 days in year\n    else null\n  end\n\n/*\n  Returns true if the given dose form is a patch (transdermal system)\n*/\ndefine function IsPatch(doseFormCode Code):\n  ToInteger(doseFormCode.code) \u003d 316987\n\n/*\n  Returns the conversion factor for the given ingredient\n\nOpioid (strength in mg except where noted)\tMME Conversion Factor*\nBuprenorphine, transdermal patch (MCG/HR)\t12.6\nBuprenorphine, tablet or film\t30\nBuprenorphine, film (MCG)\t0.03\nButorphanol\t7\nCodeine\t0.15\nDihydrocodeine\t0.25\nFentanyl, buccal/SL tabet or lozenge/troche (MCG)\t0.13\nFentanyl, film or oral spray (MCG)\t0.18\nFentanyl, nasal spray (MCG)\t0.16\nFentanyl, transdermal patch (MCG/HR)\t7.2\nHydrocodone\t1\nHydromorphone\t4\nLevomethadyl acetate\t8\nLevorphanol tartrate\t11\nMeperidine \t0.1\nMethadone\t3\n  1-20 mg/d 4\n  21-40 mg/d 8\n  41-60 mg/d 10\n  61-80 mg/d 12\nMorphine\t1\nOpium\t1 // NOTE: Not present as an ingredient in the RxNorm data\nOxycodone\t1.5\nOxymorphone\t3\nPentazocine\t0.37\nTapentadol\t0.4\nTramadol\t0.1\n\n*/\ndefine function GetConversionFactor(ingredientCode Code, dailyDose Quantity, doseFormCode Code):\n  case ToInteger(ingredientCode.code)\n    when 161 then 0 //\tAcetaminophen\n    when 1191 then 0 //\tAspirin\n    when 1223 then 0 //\tAtropine\n    when 1767 then 0 //\tBrompheniramine\n    when 1819 then ( //\tBuprenorphine\n      case \n        when ToInteger(doseFormCode.code) \u003d 316987 then 12.6 // Transdermal system\n        else 30 // Tablet or Film (or Film in MCG)\n      end\n    ) \n    when 1841 then 7 //\tButorphanol\n    when 1886 then 0 //\tCaffeine\n    when 2101 then 0 //\tCarisoprodol\n    when 2354 then 0 //\tchlorcyclizine\n    when 2400 then 0 //\tChlorpheniramine\n    when 2670 then 0.15 //\tCodeine\n    when 3423 then 4 //\tHydromorphone\n    when 3498 then 0 //\tDiphenhydramine\n    when 4337 then ( //\tFentanyl\n      case\n        when ToInteger(doseFormCode.code) in { 970789, 317007, 316992 } then 0.13 // Buccal Tablet, Sublingual Tablet, Oral Lozenge\n        when ToInteger(doseFormCode.code) \u003d 346163 then 0.18 // Buccal Film\n        when ToInteger(doseFormCode.code) in { 126542, 346163 } then 0.16 // Nasal Spray, Mucosal Spray\n        when IsPatch(doseFormCode) then 7.2 // Transdermal system\n        else 1000 // Really ought to be an error because it represents a previously unencountered dose form....\n      end\n    )\n    when 5032 then 0 //\tGuaifenesin\n    when 5489 then 1 //\tHydrocodone\n    when 5640 then 0 //\tIbuprofen\n    when 6102 then 0 //\tKaolin\n    when 6378 then 11 //\tLevorphanol (NOTE: Given as Levorphanol tartrate in the CDC conversion table)\n    when 6754 then 0.1 //\tMeperidine\n    when 6813 then ( //\tMethadone\n      case\n        when dailyDose.value between 1 and 20 then 4\n        when dailyDose.value between 21 and 40 then 8\n        when dailyDose.value between 41 and 60 then 10\n        when dailyDose.value \u0026gt;\u003d 61 then 12\n        else 1000 // Really ought to be an error because it represents an unexpected dose range...\n      end\n    )\n    when 7052 then 1 //\tMorphine\n    when 7242 then 0 //\tNaloxone\n    when 7243 then 0 //\tNaltrexone\n    when 7804 then 1.5 //\tOxycodone\n    when 7814 then 3 //\tOxymorphone\n    when 8001 then 0.37 //\tPentazocine\n    when 8163 then 0 //\tPhenylephrine\n    when 8175 then 0 //\tPhenylpropanolamine\n    when 8745 then 0 //\tPromethazine\n    when 8896 then 0 //\tPseudoephedrine\n    when 9009 then 0 //\tPyrilamine\n    when 10689 then 0.1 //\tTramadol\n    when 10849 then 0 //\tTriprolidine\n    when 19759 then 0 //\tbromodiphenhydramine\n    when 19860 then 0 //\tbutalbital\n    when 22696 then 0 //\tdexbrompheniramine\n    when 22697 then 0 //\tdexchlorpheniramine\n    when 23088 then 0.25 //\tdihydrocodeine\n    when 27084 then 0 //\thomatropine\n    when 35780 then 0 //\tropivacaine\n    when 237005 then 8 //\tLevomethadyl (NOTE: given as Levomethadyl acetate in the CDC conversion table)\n    when 636827 then 0 //\tguaiacolsulfonate\n    when 787390 then 0.4 //\ttapentadol\n    else 0\n  end\n\ndefine function EnsureMicrogramQuantity(strength Quantity):\n  if strength.value \u0026lt; 0.1 and (PositionOf(\u0027mg\u0027, strength.unit) \u003d 0) then\n    Quantity {\n      value: strength.value * 1000,\n      unit: \u0027mcg\u0027 + Substring(strength.unit, 2)\n    }\n  else\n    strength\n\n/*\n  Returns the non-surgical opioid ingredients and their strengths that\n  make up the drug identified by the given rxNormCode as a list of tuples:\n\n  List\u0026lt;Tuple {\n    rxNormCode Code,\n    doseFormCode Code,\n    doseFormName String,\n    ingredientCode Code,\n    ingredientName String,\n    strength Quantity\n  }\u0026gt;\n*/\ndefine function GetIngredients(rxNormCode Code):\n  (\n    [MED_SCDC_FOR_DRUG: DRUG_RXCUI in rxNormCode] SD\n      where exists ([MED_DRUG_VALUE_SET: DRUG_RXCUI in SD.DRUG_RXCUI])\n      return {\n        rxNormCode: rxNormCode,\n        component: SingletonFrom([MED_SCDC: SCDC_RXCUI in SD.SCDC_RXCUI]),\n        ingredientCode: SingletonFrom([MED_SCDC: SCDC_RXCUI in SD.SCDC_RXCUI]).INGREDIENT_RXCUI,\n        doseFormCode: SingletonFrom([MED_DRUG: DRUG_RXCUI in SD.DRUG_RXCUI]).DOSE_FORM_RXCUI // Could potentially look this up only once...\n      }\n  ) C\n    let\n      ingredient: SingletonFrom([MED_INGREDIENT: INGREDIENT_RXCUI in C.ingredientCode]),\n      doseForm: SingletonFrom([MED_DOSE_FORM: DOSE_FORM_RXCUI in C.doseFormCode])\n    where exists (\n      [MED_INGREDIENT_TYPE: INGREDIENT_RXCUI in C.ingredientCode] IT\n        where IT.INGREDIENT_TYPE \u003d \u0027Opioid_NonSurgical\u0027\n    )\n    return {\n      rxNormCode: rxNormCode,\n      doseFormCode: C.doseFormCode,\n      doseFormName: doseForm.DOSE_FORM_NAME,\n      ingredientCode: C.ingredientCode,\n      ingredientName: ingredient.INGREDIENT_NAME,\n      strength:\n        EnsureMicrogramQuantity(\n          Quantity {\n            value: C.component.STRENGTH_VALUE,\n            unit: ToUCUM(C.component.STRENGTH_UNIT)\n          }\n        )\n    }\n\n/*\n  Calculates daily dose for a specific ingredient based on the ingredient strength, dose form, dose quantity, and daily frequency\n*/\ndefine function GetDailyDose(ingredientCode Code, strength Quantity, doseFormCode Code, doseQuantity Quantity, dosesPerDay Decimal):\n  case\n\t  // if patch --\u0026gt; daily dose \u003d dose value (e.g, number patches with doseQuantity unit \u003d \u0026quot;patch\u0026quot;) * per-hour strength\n    when IsPatch(doseFormCode) then\n      // buprenorphine or fentanyl patch\n      if ToInteger(ingredientCode.code) in { 1819, 4337 } then\n        Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: strength.unit }\n      else\n        null\n\n    // if dose unit in actual mass units (mg or mcg -- when it\u0027s a single med) --\u0026gt; daily dose \u003d numTimesPerDay * dose\n    when doseQuantity.unit in { \u0027mg\u0027, \u0027mcg\u0027 } then\n      Quantity { value: dosesPerDay * doseQuantity.value, unit: doseQuantity.unit }\n\n    // if doseQuantity is in actual volume units (mL) --\u0026gt; daily dose \u003d numTimesPerDay * dose * strength\n    when doseQuantity.unit \u003d \u0027mL\u0027 and (PositionOf(\u0027/mL\u0027, strength.unit) \u003d Length(strength.unit) - 3) then\n      Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: Substring(strength.unit, 0, PositionOf(\u0027/\u0027, strength.unit)) }\n\n\t\t// if doseQuantity is not in actual units (e.g., 1 tab, 1 spray -- when it\u0027s a combo med with a unit of tablet, or it\u0027s mg/actuat) --\u0026gt; daily dose \u003d numTimesPerDay * dose value * strength value\n    else\n      Quantity { value: dosesPerDay * doseQuantity.value * strength.value, unit: Substring(strength.unit, 0, PositionOf(\u0027/\u0027, strength.unit)) }\n  end\n  \ndefine function GetMedicationName(rxNormCode Code):\n  SingletonFrom([MED_DRUG: DRUG_RXCUI in rxNormCode]).DRUG_NAME\n\n/*\n  Builds a description for the daily dose for an ingredient\n*/\ndefine function GetDailyDoseDescription(ingredientCode Code, ingredientName String, strength Quantity, doseFormCode Code, doseFormName String, doseQuantity Quantity, dosesPerDay Decimal, dailyDose Quantity):\n  case\n    // if patch\n    when IsPatch(doseFormCode) then\n      // buprenorphine or fentanyl patch\n      if ToInteger(ingredientCode.code) in { 1819, 4337 } then\n        ingredientName + \u0027 patch: \u0027 + ToString(doseQuantity.value) + \u0027 * \u0027 + ToString(strength) + \u0027 \u003d \u0027 + ToString(dailyDose)\n      else\n        null\n\n    // if dose unit in actual mass units (mg or mcg -- when it\u0027s a single med)\n    when doseQuantity.unit in { \u0027mg\u0027, \u0027mcg\u0027 } then\n      ingredientName + \u0027 \u0027 + doseFormName + \u0027: \u0027 + ToString(dosesPerDay) + \u0027/d * \u0027 + ToString(doseQuantity) + \u0027 \u003d \u0027 + ToString(dailyDose)\n\n    // if doseQuantity in actual volume units (mL) or not in actual units (e.g. 1 tab, 1 spray)\n    else\n      ingredientName + \u0027 \u0027 + doseFormName + \u0027: \u0027 + ToString(dosesPerDay) + \u0027/d * \u0027 + ToString(doseQuantity) + \u0027 * \u0027 + ToString(strength) + \u0027 \u003d \u0027 + ToString(dailyDose)\n  end\n\n/*\n  Calculates MMEs for the given input prescription information and returns it\n  as a list of tuples:\n\n  List\u0026lt;Tuple {\n    rxNormCode Code,\n    doseFormCode Code,\n    doseQuantity Quantity,\n    dosesPerDay Decimal,\n    ingredientCode Code,\n    ingredientName String,\n    strength Quantity,\n    dailyDose Quantity,\n    dailyDoseDescription String,\n    conversionFactor Decimal,\n    mme Quantity\n  }\u0026gt;\n*/\ndefine function CalculateMMEs(medications List\u0026lt;Tuple { rxNormCode Code, doseQuantity Quantity, dosesPerDay Decimal }\u0026gt;):\n  Flatten(\n    medications M\n      let Ingredients: GetIngredients(M.rxNormCode)\n      return\n        Ingredients I\n          let\n            adjustedDoseQuantity: EnsureMicrogramQuantity(M.doseQuantity),\n            dailyDose: GetDailyDose(I.ingredientCode, I.strength, I.doseFormCode, adjustedDoseQuantity, M.dosesPerDay),\n            factor: GetConversionFactor(I.ingredientCode, dailyDose, I.doseFormCode)\n          return {\n            rxNormCode: M.rxNormCode,\n            doseFormCode: I.doseFormCode,\n            doseQuantity: adjustedDoseQuantity,\n            dosesPerDay: M.dosesPerDay,\n            ingredientCode: I.ingredientCode,\n            ingredientName: I.ingredientName,\n            strength: I.strength,\n            dailyDose: dailyDose,\n            dailyDoseDescription: GetDailyDoseDescription(I.ingredientCode, I.ingredientName, I.strength, I.doseFormCode, I.doseFormName, adjustedDoseQuantity, M.dosesPerDay, dailyDose),\n            conversionFactor: factor,\n            mme: Quantity {\n              value: dailyDose.value * factor,\n              unit: dailyDose.unit + \u0027/d\u0027\n            }\n          }\n  )\n\ndefine TestCalculateMMEs:\n  CalculateMMEs({ { rxNormCode: Code \u0027388508\u0027 from RxNorm, doseQuantity: Quantity { value: 1, unit: \u0027patch\u0027 }, dosesPerDay: 0.33 } })\u003c/code\u003e\n      \u003c/pre\u003e\n      \u003cp\u003e\n        \u003ccode\u003eContent not shown - (\u003c/code\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e, size \u003d 183Kb)\n      \u003c/p\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OMTKLogic"}],"version":"0.1.0","title":"OMTK Logic","status":"active","experimental":true,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2017-05-05","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid Management Terminology Knowledge Base Logic for use in implementing CDC Opioid Prescribing Guidelines.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"This library normalizes units to UCUM units, identifies the conversion factor for the given ingredient, identifies the non-surgical opioid ingredients and their strengths that make up a drug identified by the given rxNormCode, calculates daily dose for a specific ingredient based on the ingredient strength, dose form, dose quantity, and daily frequency, calculates daily frequency given frequency within a period, and calculates the Morphine Milligram Equivalency (MME) for a given prescription.","usage":"This library is used to gather information about an opioid prescription necessary to offer opioid management guidance for a patient.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/omtk-modelinfo"},{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"documentation","display":"MME Conversion Tables","url":"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"}],"content":[{"contentType":"text/cql","data":"","url":"cql/OMTKLogic-0.1.0.cql"},{"contentType":"application/elm+xml","data":"\u003d","url":"elm/OMTKLogic-0.1.0.xml"}]}
{"resourceType":"Library","id":"omtk-modelinfo","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot; standalone\u003d\u0026quot;yes\u0026quot;?\u0026gt;\n\u0026lt;ns4:modelInfo name\u003d\u0026quot;OMTK\u0026quot; url\u003d\u0026quot;http://org.opencds/opioid-cds\u0026quot; targetQualifier\u003d\u0026quot;cdc\u0026quot; xmlns:xs\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:ns4\u003d\u0026quot;urn:hl7-org:elm-modelinfo:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot;\n               version\u003d\u0026quot;0.1.0\u0026quot;\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DOSE_FORM\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DOSE_FORM_GROUP\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_GROUP_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_GROUP_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DRUG\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_TYPE\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DRUG_DOSE_FORM_GROUP\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DOSE_FORM_GROUP_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DRUG_VALUE_SET\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;VALUE_SET_ID\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_DRUG_WITH_INGREDIENT\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_INGREDIENT\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;USE_TO_POPULATE_DB\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;SKIP\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_INGREDIENT_IN_CLASS\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;MED_CLASS_ID\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_INGREDIENT_TYPE\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_TYPE\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_SCDC\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;SCDC_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;SCDC_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;INGREDIENT_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;STRENGTH\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;STRENGTH_VALUE\u0026quot; type\u003d\u0026quot;System.Decimal\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;STRENGTH_UNIT\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.MED_SCDC_FOR_DRUG\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DRUG_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;SCDC_RXCUI\u0026quot; type\u003d\u0026quot;System.Code\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n    \u0026lt;ns4:typeInfo xsi:type\u003d\u0026quot;ns4:ClassInfo\u0026quot; name\u003d\u0026quot;OMTK.VALUE_SET\u0026quot; baseType\u003d\u0026quot;System.Any\u0026quot; retrievable\u003d\u0026quot;true\u0026quot;\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;VALUE_SET_ID\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;EXECUTE_ORDER\u0026quot; type\u003d\u0026quot;System.Integer\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;VALUE_SET_NAME\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;DESCRIPTION\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;SQL\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;COMMENTS\u0026quot; type\u003d\u0026quot;System.String\u0026quot;/\u0026gt;\n        \u0026lt;ns4:element name\u003d\u0026quot;UPDATE_DTM\u0026quot; type\u003d\u0026quot;System.DateTime\u0026quot;/\u0026gt;\n    \u0026lt;/ns4:typeInfo\u0026gt;\n\u0026lt;/ns4:modelInfo\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OMTKModelInfo"}],"version":"0.1.0","title":"OMTK Model Info","status":"active","experimental":true,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"model-definition"}]},"date":"2017-05-05","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid Management Terminology Knowledge Base Model Definition for use in implementing CDC Opioid Prescribing Guidelines.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"This library defines the Opioid Management Terminology Knowledge Base model","usage":"This library is used to resolve data elements in the Opioid Management Terminology Knowledge Base model","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"content":[{"contentType":"application/xml","data":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pg0KPG5zNDptb2RlbEluZm8gbmFtZT0iT01USyIgdXJsPSJodHRwOi8vb3JnLm9wZW5jZHMvb3Bpb2lkLWNkcyIgdGFyZ2V0UXVhbGlmaWVyPSJjZGMiIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6bnM0PSJ1cm46aGw3LW9yZzplbG0tbW9kZWxpbmZvOnIxIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIg0KICAgICAgICAgICAgICAgdmVyc2lvbj0iMC4xLjAiPg0KICAgIDxuczQ6dHlwZUluZm8geHNpOnR5cGU9Im5zNDpDbGFzc0luZm8iIG5hbWU9Ik9NVEsuTUVEX0RPU0VfRk9STSIgYmFzZVR5cGU9IlN5c3RlbS5BbnkiIHJldHJpZXZhYmxlPSJ0cnVlIj4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkRPU0VfRk9STV9SWENVSSIgdHlwZT0iU3lzdGVtLkNvZGUiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkRPU0VfRk9STV9OQU1FIiB0eXBlPSJTeXN0ZW0uU3RyaW5nIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJVUERBVEVfRFRNIiB0eXBlPSJTeXN0ZW0uRGF0ZVRpbWUiLz4NCiAgICA8L25zNDp0eXBlSW5mbz4NCiAgICA8bnM0OnR5cGVJbmZvIHhzaTp0eXBlPSJuczQ6Q2xhc3NJbmZvIiBuYW1lPSJPTVRLLk1FRF9ET1NFX0ZPUk1fR1JPVVAiIGJhc2VUeXBlPSJTeXN0ZW0uQW55IiByZXRyaWV2YWJsZT0idHJ1ZSI+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJET1NFX0ZPUk1fR1JPVVBfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJET1NFX0ZPUk1fR1JPVVBfTkFNRSIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVBEQVRFX0RUTSIgdHlwZT0iU3lzdGVtLkRhdGVUaW1lIi8+DQogICAgPC9uczQ6dHlwZUluZm8+DQogICAgPG5zNDp0eXBlSW5mbyB4c2k6dHlwZT0ibnM0OkNsYXNzSW5mbyIgbmFtZT0iT01USy5NRURfRFJVRyIgYmFzZVR5cGU9IlN5c3RlbS5BbnkiIHJldHJpZXZhYmxlPSJ0cnVlIj4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkRSVUdfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJEUlVHX1RZUEUiIHR5cGU9IlN5c3RlbS5TdHJpbmciLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkRSVUdfTkFNRSIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iRE9TRV9GT1JNX1JYQ1VJIiB0eXBlPSJTeXN0ZW0uQ29kZSIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVBEQVRFX0RUTSIgdHlwZT0iU3lzdGVtLkRhdGVUaW1lIi8+DQogICAgPC9uczQ6dHlwZUluZm8+DQogICAgPG5zNDp0eXBlSW5mbyB4c2k6dHlwZT0ibnM0OkNsYXNzSW5mbyIgbmFtZT0iT01USy5NRURfRFJVR19ET1NFX0ZPUk1fR1JPVVAiIGJhc2VUeXBlPSJTeXN0ZW0uQW55IiByZXRyaWV2YWJsZT0idHJ1ZSI+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJEUlVHX1JYQ1VJIiB0eXBlPSJTeXN0ZW0uQ29kZSIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iRE9TRV9GT1JNX0dST1VQX1JYQ1VJIiB0eXBlPSJTeXN0ZW0uQ29kZSIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVBEQVRFX0RUTSIgdHlwZT0iU3lzdGVtLkRhdGVUaW1lIi8+DQogICAgPC9uczQ6dHlwZUluZm8+DQogICAgPG5zNDp0eXBlSW5mbyB4c2k6dHlwZT0ibnM0OkNsYXNzSW5mbyIgbmFtZT0iT01USy5NRURfRFJVR19WQUxVRV9TRVQiIGJhc2VUeXBlPSJTeXN0ZW0uQW55IiByZXRyaWV2YWJsZT0idHJ1ZSI+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJWQUxVRV9TRVRfSUQiIHR5cGU9IlN5c3RlbS5JbnRlZ2VyIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJEUlVHX1JYQ1VJIiB0eXBlPSJTeXN0ZW0uQ29kZSIvPg0KICAgIDwvbnM0OnR5cGVJbmZvPg0KICAgIDxuczQ6dHlwZUluZm8geHNpOnR5cGU9Im5zNDpDbGFzc0luZm8iIG5hbWU9Ik9NVEsuTUVEX0RSVUdfV0lUSF9JTkdSRURJRU5UIiBiYXNlVHlwZT0iU3lzdGVtLkFueSIgcmV0cmlldmFibGU9InRydWUiPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iSU5HUkVESUVOVF9SWENVSSIgdHlwZT0iU3lzdGVtLkNvZGUiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkRSVUdfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJVUERBVEVfRFRNIiB0eXBlPSJTeXN0ZW0uRGF0ZVRpbWUiLz4NCiAgICA8L25zNDp0eXBlSW5mbz4NCiAgICA8bnM0OnR5cGVJbmZvIHhzaTp0eXBlPSJuczQ6Q2xhc3NJbmZvIiBuYW1lPSJPTVRLLk1FRF9JTkdSRURJRU5UIiBiYXNlVHlwZT0iU3lzdGVtLkFueSIgcmV0cmlldmFibGU9InRydWUiPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iSU5HUkVESUVOVF9SWENVSSIgdHlwZT0iU3lzdGVtLkNvZGUiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IklOR1JFRElFTlRfTkFNRSIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVNFX1RPX1BPUFVMQVRFX0RCIiB0eXBlPSJTeXN0ZW0uSW50ZWdlciIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iU0tJUCIgdHlwZT0iU3lzdGVtLkludGVnZXIiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlVQREFURV9EVE0iIHR5cGU9IlN5c3RlbS5EYXRlVGltZSIvPg0KICAgIDwvbnM0OnR5cGVJbmZvPg0KICAgIDxuczQ6dHlwZUluZm8geHNpOnR5cGU9Im5zNDpDbGFzc0luZm8iIG5hbWU9Ik9NVEsuTUVEX0lOR1JFRElFTlRfSU5fQ0xBU1MiIGJhc2VUeXBlPSJTeXN0ZW0uQW55IiByZXRyaWV2YWJsZT0idHJ1ZSI+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJNRURfQ0xBU1NfSUQiIHR5cGU9IlN5c3RlbS5JbnRlZ2VyIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJJTkdSRURJRU5UX1JYQ1VJIiB0eXBlPSJTeXN0ZW0uQ29kZSIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVBEQVRFX0RUTSIgdHlwZT0iU3lzdGVtLkRhdGVUaW1lIi8+DQogICAgPC9uczQ6dHlwZUluZm8+DQogICAgPG5zNDp0eXBlSW5mbyB4c2k6dHlwZT0ibnM0OkNsYXNzSW5mbyIgbmFtZT0iT01USy5NRURfSU5HUkVESUVOVF9UWVBFIiBiYXNlVHlwZT0iU3lzdGVtLkFueSIgcmV0cmlldmFibGU9InRydWUiPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iSU5HUkVESUVOVF9SWENVSSIgdHlwZT0iU3lzdGVtLkNvZGUiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IklOR1JFRElFTlRfVFlQRSIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iVVBEQVRFX0RUTSIgdHlwZT0iU3lzdGVtLkRhdGVUaW1lIi8+DQogICAgPC9uczQ6dHlwZUluZm8+DQogICAgPG5zNDp0eXBlSW5mbyB4c2k6dHlwZT0ibnM0OkNsYXNzSW5mbyIgbmFtZT0iT01USy5NRURfU0NEQyIgYmFzZVR5cGU9IlN5c3RlbS5BbnkiIHJldHJpZXZhYmxlPSJ0cnVlIj4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlNDRENfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJTQ0RDX05BTUUiIHR5cGU9IlN5c3RlbS5TdHJpbmciLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IklOR1JFRElFTlRfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJTVFJFTkdUSCIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iU1RSRU5HVEhfVkFMVUUiIHR5cGU9IlN5c3RlbS5EZWNpbWFsIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJTVFJFTkdUSF9VTklUIiB0eXBlPSJTeXN0ZW0uU3RyaW5nIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJVUERBVEVfRFRNIiB0eXBlPSJTeXN0ZW0uRGF0ZVRpbWUiLz4NCiAgICA8L25zNDp0eXBlSW5mbz4NCiAgICA8bnM0OnR5cGVJbmZvIHhzaTp0eXBlPSJuczQ6Q2xhc3NJbmZvIiBuYW1lPSJPTVRLLk1FRF9TQ0RDX0ZPUl9EUlVHIiBiYXNlVHlwZT0iU3lzdGVtLkFueSIgcmV0cmlldmFibGU9InRydWUiPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iRFJVR19SWENVSSIgdHlwZT0iU3lzdGVtLkNvZGUiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlNDRENfUlhDVUkiIHR5cGU9IlN5c3RlbS5Db2RlIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJVUERBVEVfRFRNIiB0eXBlPSJTeXN0ZW0uRGF0ZVRpbWUiLz4NCiAgICA8L25zNDp0eXBlSW5mbz4NCiAgICA8bnM0OnR5cGVJbmZvIHhzaTp0eXBlPSJuczQ6Q2xhc3NJbmZvIiBuYW1lPSJPTVRLLlZBTFVFX1NFVCIgYmFzZVR5cGU9IlN5c3RlbS5BbnkiIHJldHJpZXZhYmxlPSJ0cnVlIj4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlZBTFVFX1NFVF9JRCIgdHlwZT0iU3lzdGVtLkludGVnZXIiLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IkVYRUNVVEVfT1JERVIiIHR5cGU9IlN5c3RlbS5JbnRlZ2VyIi8+DQogICAgICAgIDxuczQ6ZWxlbWVudCBuYW1lPSJWQUxVRV9TRVRfTkFNRSIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iREVTQ1JJUFRJT04iIHR5cGU9IlN5c3RlbS5TdHJpbmciLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlNRTCIgdHlwZT0iU3lzdGVtLlN0cmluZyIvPg0KICAgICAgICA8bnM0OmVsZW1lbnQgbmFtZT0iQ09NTUVOVFMiIHR5cGU9IlN5c3RlbS5TdHJpbmciLz4NCiAgICAgICAgPG5zNDplbGVtZW50IG5hbWU9IlVQREFURV9EVE0iIHR5cGU9IlN5c3RlbS5EYXRlVGltZSIvPg0KICAgIDwvbnM0OnR5cGVJbmZvPg0KPC9uczQ6bW9kZWxJbmZvPg0K","url":"elm/OMTK-modelinfo-0.1.0.xml"}]}
{"resourceType":"Library","id":"opioidcds-common","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/omtk-logic\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eMME Conversion Tables\u003c/td\u003e\n          \u003ctd\u003ehttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;OMTKLogic\u0026quot; path\u003d\u0026quot;OMTKLogic\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;valueSets\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Benzodiazepines\u0026quot; id\u003d\u0026quot;benzodiazepines\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Naloxone\u0026quot; id\u003d\u0026quot;naloxone\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; id\u003d\u0026quot;opioids-abused-in-ambulatory-care\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;End Of Life Opioids\u0026quot; id\u003d\u0026quot;opioids-indicating-end-of-life\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Long Acting Opioids\u0026quot; id\u003d\u0026quot;long-acting-opioids\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Illicit Drug Screening\u0026quot; id\u003d\u0026quot;illicit-drug-urine-screening\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Opioid Drug Screening\u0026quot; id\u003d\u0026quot;opioid-urine-screening\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Opioids\u0026quot; id\u003d\u0026quot;opioids\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Codeine Cough Meds\u0026quot; id\u003d\u0026quot;opioids-codeine-cough-meds\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Short Acting Opioids\u0026quot; id\u003d\u0026quot;short-acting-opioids\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n   \u0026lt;/valueSets\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsForChronicPain\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:Boolean\u0026quot; value\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;HasMetastaticCancer\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:Boolean\u0026quot; value\u003d\u0026quot;false\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ToCode\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression classType\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;Instance\u0026quot;\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;code\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;system\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;system\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;version\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;version\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;display\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;display\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;coding\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;fhir:Coding\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ToQuantity\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression classType\u003d\u0026quot;t:Quantity\u0026quot; xsi:type\u003d\u0026quot;Instance\u0026quot;\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;value\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;quantity\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;unit\u0026quot;\u0026gt;\n               \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;unit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;quantity\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;quantity\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;fhir:Quantity\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Prescriptions\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;O\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Orders\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;ToCode\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;O\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;medicationName\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;GetMedicationName\u0026quot; libraryName\u003d\u0026quot;OMTKLogic\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;dosageInstruction\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;dosageInstruction\u0026quot; scope\u003d\u0026quot;O\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;repeat\u0026quot;\u0026gt;\n               \u0026lt;expression path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;frequency\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Coalesce\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;frequencyMax\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;period\u0026quot;\u0026gt;\n               \u0026lt;expression classType\u003d\u0026quot;t:Quantity\u0026quot; xsi:type\u003d\u0026quot;Instance\u0026quot;\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;value\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;period\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source name\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;unit\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;periodUnit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source name\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;doseDescription\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Coalesce\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                        \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Is\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;isTypeSpecifier name\u003d\u0026quot;fhir:Range\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/condition\u0026gt;\n                        \u0026lt;then xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                                 \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                                    \u0026lt;operand name\u003d\u0026quot;ToQuantity\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;low\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                             \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                          \u0026lt;/source\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                                 \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;-\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                                 \u0026lt;operand name\u003d\u0026quot;ToQuantity\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                                    \u0026lt;operand path\u003d\u0026quot;high\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                       \u0026lt;/source\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;unit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;high\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/then\u0026gt;\n                        \u0026lt;else xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;ToQuantity\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                              \u0026lt;operand asType\u003d\u0026quot;fhir:Quantity\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/else\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;frequencyDescription\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Coalesce\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;-\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;frequencyMax\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Tuple\u0026quot;\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n                     \u0026lt;value name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;isDraft\u0026quot;\u0026gt;\n                     \u0026lt;value xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;O\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;draft\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;isPRN\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;asNeeded\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;prescription\u0026quot;\u0026gt;\n                     \u0026lt;value xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                        \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;text\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/condition\u0026gt;\n                        \u0026lt;then xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;medicationName\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot; \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;text\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/then\u0026gt;\n                        \u0026lt;else xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                                 \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                                    \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                                       \u0026lt;operand name\u003d\u0026quot;medicationName\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                       \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot; \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                    \u0026lt;operand name\u003d\u0026quot;doseDescription\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                                 \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot; q\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;frequencyDescription\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                              \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source path\u003d\u0026quot;asNeeded\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/condition\u0026gt;\n                              \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot; PRN\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;else valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/else\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;dose\u0026quot;\u0026gt;\n                     \u0026lt;value xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                        \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Is\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;isTypeSpecifier name\u003d\u0026quot;fhir:Range\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/condition\u0026gt;\n                        \u0026lt;then name\u003d\u0026quot;ToQuantity\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;high\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/then\u0026gt;\n                        \u0026lt;else name\u003d\u0026quot;ToQuantity\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand asType\u003d\u0026quot;fhir:Quantity\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;dose\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;dosageInstruction\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/else\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;dosesPerDay\u0026quot;\u0026gt;\n                     \u0026lt;value xsi:type\u003d\u0026quot;Coalesce\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;ToDaily\u0026quot; libraryName\u003d\u0026quot;OMTKLogic\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;period\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;Orders\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n               \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n            \u0026lt;/operandTypeSpecifier\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;MME\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;P\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Prescriptions\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;prescriptions\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;mme\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;CalculateMMEs\u0026quot; libraryName\u003d\u0026quot;OMTKLogic\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;List\u0026quot;\u0026gt;\n                        \u0026lt;element xsi:type\u003d\u0026quot;Tuple\u0026quot;\u0026gt;\n                           \u0026lt;element name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n                              \u0026lt;value path\u003d\u0026quot;rxNormCode\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/element\u0026gt;\n                           \u0026lt;element name\u003d\u0026quot;doseQuantity\u0026quot;\u0026gt;\n                              \u0026lt;value path\u003d\u0026quot;dose\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/element\u0026gt;\n                           \u0026lt;element name\u003d\u0026quot;dosesPerDay\u0026quot;\u0026gt;\n                              \u0026lt;value path\u003d\u0026quot;dosesPerDay\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/element\u0026gt;\n                        \u0026lt;/element\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Tuple\u0026quot;\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;rxNormCode\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;isDraft\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;isDraft\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;isPRN\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;isPRN\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;prescription\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;prescription\u0026quot; scope\u003d\u0026quot;P\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;dailyDose\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;dailyDoseDescription\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;mme\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;conversionFactor\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;conversionFactor\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;mme\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n                  \u0026lt;element name\u003d\u0026quot;mme\u0026quot;\u0026gt;\n                     \u0026lt;value path\u003d\u0026quot;mme\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;mme\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/value\u0026gt;\n                  \u0026lt;/element\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;prescriptions\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n               \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n            \u0026lt;/operandTypeSpecifier\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;TotalMME\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression classType\u003d\u0026quot;t:Quantity\u0026quot; xsi:type\u003d\u0026quot;Instance\u0026quot;\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;value\u0026quot;\u0026gt;\n               \u0026lt;value xsi:type\u003d\u0026quot;Sum\u0026quot;\u0026gt;\n                  \u0026lt;source xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                     \u0026lt;source alias\u003d\u0026quot;M\u0026quot;\u0026gt;\n                        \u0026lt;expression name\u003d\u0026quot;MME\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;prescriptions\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                        \u0026lt;/expression\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                     \u0026lt;return\u0026gt;\n                        \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;mme\u0026quot; scope\u003d\u0026quot;M\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/expression\u0026gt;\n                     \u0026lt;/return\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/value\u0026gt;\n            \u0026lt;/element\u0026gt;\n            \u0026lt;element name\u003d\u0026quot;unit\u0026quot;\u0026gt;\n               \u0026lt;value valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;mg/d\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/element\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;prescriptions\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n               \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n            \u0026lt;/operandTypeSpecifier\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;GetPeriodDays\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Case\u0026quot;\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;year\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;365.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;month\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;30.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;hour\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then xsi:type\u003d\u0026quot;Divide\u0026quot;\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;24.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/then\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;minute\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Divide\u0026quot;\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;24.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;60.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/then\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;else valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;value\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;GetDurationInDays\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Case\u0026quot;\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;unit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;year\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;365.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/then\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when xsi:type\u003d\u0026quot;StartsWith\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;unit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;month\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/when\u0026gt;\n               \u0026lt;then xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;30.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/then\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;else path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n               \u0026lt;source path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n            \u0026lt;/else\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;value\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;fhir:Duration\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ProbableDaysInRange\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;orders\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Orders\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;frequency\u0026quot;\u0026gt;\n               \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;dosageInstruction\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;period\u0026quot;\u0026gt;\n               \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;period\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;dosageInstruction\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;periodDays\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;GetPeriodDays\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;periodUnit\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;timing\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;dosageInstruction\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                 \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;dosesPerDay\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                  \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;GreaterOrEqual\u0026quot;\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;Divide\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;period\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;periodDays\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/condition\u0026gt;\n                  \u0026lt;then valueType\u003d\u0026quot;t:Decimal\u0026quot; value\u003d\u0026quot;1.0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;else xsi:type\u003d\u0026quot;Divide\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;frequency\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;period\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;periodDays\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/else\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;repeat\u0026quot;\u0026gt;\n               \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;numberOfRepeatsAllowed\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;dispenseRequest\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;supplyDuration\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;GetDurationInDays\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;expectedSupplyDuration\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;dispenseRequest\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;validityPeriod\u0026quot;\u0026gt;\n               \u0026lt;expression precision\u003d\u0026quot;Day\u0026quot; xsi:type\u003d\u0026quot;DurationBetween\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;start\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;validityPeriod\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;dispenseRequest\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;endDifference\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                  \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Less\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;end\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;validityPeriod\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;dispenseRequest\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/condition\u0026gt;\n                  \u0026lt;then precision\u003d\u0026quot;Day\u0026quot; xsi:type\u003d\u0026quot;DurationBetween\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;end\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;validityPeriod\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;dispenseRequest\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n                  \u0026lt;/then\u0026gt;\n                  \u0026lt;else valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;GreaterOrEqual\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;dosesPerDay\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;Divide\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Multiply\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                                 \u0026lt;operand name\u003d\u0026quot;repeat\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;supplyDuration\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                              \u0026lt;operand name\u003d\u0026quot;validityPeriod\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;daysPast\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;endDifference\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;numDaysInDaysPast\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;Orders\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n               \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n            \u0026lt;/operandTypeSpecifier\u0026gt;\n         \u0026lt;/operand\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;daysPast\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Integer\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;numDaysInDaysPast\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Integer\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsNaloxone\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Naloxone\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsBenzodiazepine\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Benzodiazepines\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsLongActingOpioid\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Long Acting Opioids\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsEndOfLifeOpioid\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;End Of Life Opioids\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsOpioidDrugScreen\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;observationCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Opioid Drug Screening\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;observationCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;IsIllicitDrugScreen\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;InValueSet\u0026quot;\u0026gt;\n            \u0026lt;code name\u003d\u0026quot;observationCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;valueset name\u003d\u0026quot;Illicit Drug Screening\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;observationCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;GetIngredient\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;$this\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;GetIngredients\u0026quot; libraryName\u003d\u0026quot;OMTKLogic\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;ingredientName\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression path\u003d\u0026quot;ingredientName\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:Code\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_Common"}],"version":"0.1.0","title":"Opioid CDS Common Logic","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Common Opioid Decision Support Logic for use in implementing CDC Opioid Prescribing Guidelines.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"This library contains common logic across recommendations including MME calculations, conversions, and looking up codes in valuesets.","usage":"This library is used for decision support for opioid guideline recommendations when applying PlanDefinitions.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/omtk-logic"},{"type":"documentation","display":"MME Conversion Tables","url":"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"}],"content":[{"contentType":"application/elm+xml","data":"\u003d\u003d"}]}
{"resourceType":"Library","id":"opioidcds-recommendation-04","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\"\u003ehttp://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"encounter.html\"\u003eEncounter\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;67\u0026quot; startChar\u003d\u0026quot;5\u0026quot; endLine\u003d\u0026quot;67\u0026quot; endChar\u003d\u0026quot;68\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;67\u0026quot; startChar\u003d\u0026quot;5\u0026quot; endLine\u003d\u0026quot;67\u0026quot; endChar\u003d\u0026quot;68\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;78\u0026quot; startChar\u003d\u0026quot;83\u0026quot; endLine\u003d\u0026quot;78\u0026quot; endChar\u003d\u0026quot;126\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_REC_04\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;Common\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Period\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression lowClosed\u003d\u0026quot;true\u0026quot; highClosed\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Interval\u0026quot;\u0026gt;\n            \u0026lt;low xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;91\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/low\u0026gt;\n            \u0026lt;high xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/high\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Encounter Period\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression lowClosed\u003d\u0026quot;true\u0026quot; highClosed\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Interval\u0026quot;\u0026gt;\n            \u0026lt;low xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n                  \u0026lt;operand value\u003d\u0026quot;12\u0026quot; unit\u003d\u0026quot;months\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/low\u0026gt;\n            \u0026lt;high xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/high\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Trigger Event Prescriptions\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;triggerScripts\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;rxNormCode\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScripts\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;IsLongActingOpioid\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;rxNormCode\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Trigger Trigger Event Prescription Ids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;triggerScripts\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Get Trigger Event Prescriptions\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;let identifier\u003d\u0026quot;codeString\u0026quot;\u0026gt;\n               \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/let\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;codeString\u0026quot; xsi:type\u003d\u0026quot;QueryLetRef\u0026quot;/\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;id\u0026quot; scope\u003d\u0026quot;triggerScripts\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot; \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Get Trigger Event Prescriptions\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Opioid with Ambulatory Care Abuse Potential in Past 90 Days\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;orders\u0026quot;\u0026gt;\n                  \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                     \u0026lt;codes name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n                  \u0026lt;/expression\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;DateFrom\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;authoredOn\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Inclusion Period\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Opioid with Ambulatory Care Abuse Potential in Past 90 Days\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                  \u0026lt;source alias\u003d\u0026quot;encounters\u0026quot;\u0026gt;\n                     \u0026lt;expression dataType\u003d\u0026quot;fhir:Encounter\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n                  \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;DateFrom\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;start\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;period\u0026quot; scope\u003d\u0026quot;encounters\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Encounter Period\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/where\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Summary\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Recommend use of immediate-release opioids instead of extended release/long acting opioids when starting patient on opioids.\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Detail\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;The following medication requests(s) release rates should be re-evaluated: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Get Trigger Trigger Event Prescription Ids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_04"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #4","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid decision support logic for prescribing extended-release/long-acting (ER/LA) opioids when starting a patient on opioids.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"The purpose of this library is to determine the appropriateness of extended-release opioids with ambulatory abuse potential for the patient.","usage":"This library is used to notify the prescriber/user that immediate-release opioids are recommended when starting a patient on opioids.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"}],"dataRequirement":[{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care"}]},{"type":"Encounter"}],"content":[{"contentType":"application/elm+xml","data":"\u003d"}]}
{"resourceType":"Library","id":"opioidcds-recommendation-05","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eMME Conversion Tables\u003c/td\u003e\n          \u003ctd\u003ehttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003estatus\u003c/td\u003e\n          \u003ctd\u003eOne of these codes: [not stated] active: active\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecategory\u003c/td\u003e\n          \u003ctd\u003eOne of these codes: \n            \u003ca href\u003d\"http://terminology.hl7.org/2.1.0/CodeSystem-medicationrequest-category.html\"\u003ehttp://terminology.hl7.org/CodeSystem/medicationrequest-category\u003c/a\u003e outpatient: Outpatient\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;MMECommon\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;UserID\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier name\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Active Prescriptions\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;activeRx\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;activeRx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;active\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Flatten\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                                 \u0026lt;source alias\u003d\u0026quot;$this\u0026quot;\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;category\u0026quot; scope\u003d\u0026quot;activeRx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                                 \u0026lt;where xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                                    \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                 \u0026lt;/where\u0026gt;\n                                 \u0026lt;return\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/expression\u0026gt;\n                                 \u0026lt;/return\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;outpatient\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Total MME\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression name\u003d\u0026quot;TotalMME\u0026quot; libraryName\u003d\u0026quot;MMECommon\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Union\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Get Active Prescriptions\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Is MME 50 Or More?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;GreaterOrEqual\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Total MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;operand value\u003d\u0026quot;50\u0026quot; unit\u003d\u0026quot;mg/d\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Summary\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;High risk for opioid overdose - \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Case\u0026quot;\u0026gt;\n               \u0026lt;caseItem\u0026gt;\n                  \u0026lt;when xsi:type\u003d\u0026quot;GreaterOrEqual\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source name\u003d\u0026quot;Total MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;ToDecimal\u0026quot;\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;90\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/when\u0026gt;\n                  \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;taper now\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/caseItem\u0026gt;\n               \u0026lt;else valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;consider tapering\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Detail\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n               \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Total morphine milligram equivalent (MME) is \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Total MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;. Taper to less than 50.\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_05"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #5","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid Decision Support Logic for use in implementing CDC Opioid Prescribing Guidelines.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"This library works in concert with the OMTK logic library to provide decision support for Morphine Milligram Equivalence calculations and dynamic value resolution.","usage":"This library is to notify the prescriber/user whether the current prescription exceeds the recommended MME.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"},{"type":"documentation","display":"MME Conversion Tables","url":"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"}],"dataRequirement":[{"id":"medications","type":"MedicationRequest","codeFilter":[{"path":"status","code":[{"code":"active"}]},{"path":"category","code":[{"system":"http://terminology.hl7.org/CodeSystem/medicationrequest-category","code":"outpatient"}]}]}],"content":[{"contentType":"application/elm+xml","data":"\u003d"}]}
{"resourceType":"Library","id":"opioidcds-recommendation-07","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-indicating-end-of-life\"\u003ehttp://example.org/fhir/ValueSet/opioids-indicating-end-of-life\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"procedure.html\"\u003eProcedure\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecode\u003c/td\u003e\n          \u003ctd\u003eOne of these codes: \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"procedure.html\"\u003eProcedure\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecode\u003c/td\u003e\n          \u003ctd\u003eOne of these codes: \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\"\u003ehttp://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"encounter.html\"\u003eEncounter\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;76\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;76\u0026quot; endChar\u003d\u0026quot;51\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;76\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;76\u0026quot; endChar\u003d\u0026quot;51\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;85\u0026quot; startChar\u003d\u0026quot;4\u0026quot; endLine\u003d\u0026quot;85\u0026quot; endChar\u003d\u0026quot;53\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;86\u0026quot; startChar\u003d\u0026quot;13\u0026quot; endLine\u003d\u0026quot;86\u0026quot; endChar\u003d\u0026quot;52\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;95\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;95\u0026quot; endChar\u003d\u0026quot;66\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;95\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;95\u0026quot; endChar\u003d\u0026quot;66\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;103\u0026quot; startChar\u003d\u0026quot;10\u0026quot; endLine\u003d\u0026quot;103\u0026quot; endChar\u003d\u0026quot;70\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;69\u0026quot; startChar\u003d\u0026quot;59\u0026quot; endLine\u003d\u0026quot;69\u0026quot; endChar\u003d\u0026quot;88\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;115\u0026quot; startChar\u003d\u0026quot;6\u0026quot; endLine\u003d\u0026quot;115\u0026quot; endChar\u003d\u0026quot;35\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_REC_07\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;Common\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;codeSystems\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;SNOMED\u0026quot; id\u003d\u0026quot;http://snomed.info/sct\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n   \u0026lt;/codeSystems\u0026gt;\n   \u0026lt;codes\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Assessment of risk for opioid abuse\u0026quot; id\u003d\u0026quot;454281000124100\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;codeSystem name\u003d\u0026quot;SNOMED\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;High risk drug monitoring\u0026quot; id\u003d\u0026quot;268525008\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;codeSystem name\u003d\u0026quot;SNOMED\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/codes\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Risk Assessment Interval\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression lowClosed\u003d\u0026quot;true\u0026quot; highClosed\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Interval\u0026quot;\u0026gt;\n            \u0026lt;low xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;91\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/low\u0026gt;\n            \u0026lt;high xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;day\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/high\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Encounter Interval\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression lowClosed\u003d\u0026quot;true\u0026quot; highClosed\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Interval\u0026quot;\u0026gt;\n            \u0026lt;low xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n                  \u0026lt;operand value\u003d\u0026quot;12\u0026quot; unit\u003d\u0026quot;months\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/low\u0026gt;\n            \u0026lt;high xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;day\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/high\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;triggerScript\u0026quot;\u0026gt;\n                  \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScript\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Medications Indicating End Of Life\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;endOfLifeRx\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;End Of Life Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n               \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;endOfLifeRx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;active\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Exclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Medications Indicating End Of Life\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Opioid Risk Assessment in Past 90 Days\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;riskAssessment\u0026quot;\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Union\u0026quot;\u0026gt;\n                  \u0026lt;operand dataType\u003d\u0026quot;fhir:Procedure\u0026quot; codeProperty\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                     \u0026lt;codes name\u003d\u0026quot;Assessment of risk for opioid abuse\u0026quot; xsi:type\u003d\u0026quot;CodeRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand dataType\u003d\u0026quot;fhir:Procedure\u0026quot; codeProperty\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                     \u0026lt;codes name\u003d\u0026quot;High risk drug monitoring\u0026quot; xsi:type\u003d\u0026quot;CodeRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n               \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;start\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;performed\u0026quot; scope\u003d\u0026quot;riskAssessment\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Risk Assessment Interval\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;Rx\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;active\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Flatten\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                                 \u0026lt;source alias\u003d\u0026quot;$this\u0026quot;\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;category\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                                 \u0026lt;where xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                                    \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                 \u0026lt;/where\u0026gt;\n                                 \u0026lt;return\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/expression\u0026gt;\n                                 \u0026lt;/return\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;outpatient\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Encounter in past 12 months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;E\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:Encounter\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n               \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;start\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;period\u0026quot; scope\u003d\u0026quot;E\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Encounter Interval\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Rx Active 7 of Past 10 Days With Encounter\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;ProbableDaysInRange\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;10\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Encounter in past 12 months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Rx Active 63 of Past 90 Days\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression name\u003d\u0026quot;ProbableDaysInRange\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;90\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;63\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Exclusion Criteria\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Opioid Risk Assessment in Past 90 Days\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Rx Active 7 of Past 10 Days With Encounter\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Rx Active 63 of Past 90 Days\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Summary\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Patients on opioid therapy should be evaluated for benefits and harms within 1 to 4 weeks of starting opioid therapy and every 3 months or more subsequently.\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Detail\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n            \u0026lt;condition xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Rx Active 63 of Past 90 Days\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/condition\u0026gt;\n            \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;No evaluation for benefits and harms associated with opioid therapy has been performed for the patient in the past 3 months\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;else valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;No evaluation for benefits and harms has been performed for the patient starting opioid therapy\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_07"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #7","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid decision support logic to evaluate benefits and harms with patients within 1 to 4 weeks of starting opioid therapy and harms of continued therapy with patients every 3 months or more frequently.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"The purpose of this library is to determine whether the patient has been evaluated for benefits and harms within 1 to 4 weeks of starting opioid therapy and every 3 months or more subsequently.","usage":"This library is used to notify the prescriber/user whether an evaluation for benefits and harms associated with opioid therapy is recommended for the patient.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"}],"dataRequirement":[{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-indicating-end-of-life"}]},{"type":"Procedure","codeFilter":[{"path":"code"}]},{"type":"Procedure","codeFilter":[{"path":"code"}]},{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care"}]},{"type":"Encounter"}],"content":[{"contentType":"application/elm+xml","data":""}]}
{"resourceType":"Library","id":"opioidcds-recommendation-08","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eMME Conversion Tables\u003c/td\u003e\n          \u003ctd\u003ehttps://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/naloxone\"\u003ehttp://example.org/fhir/ValueSet/naloxone\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\"\u003ehttp://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/benzodiazepines\"\u003ehttp://example.org/fhir/ValueSet/benzodiazepines\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"condition.html\"\u003eCondition\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecode\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/substance-abuse\"\u003ehttp://example.org/fhir/ValueSet/substance-abuse\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;63\u0026quot; startChar\u003d\u0026quot;11\u0026quot; endLine\u003d\u0026quot;63\u0026quot; endChar\u003d\u0026quot;48\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;63\u0026quot; startChar\u003d\u0026quot;11\u0026quot; endLine\u003d\u0026quot;63\u0026quot; endChar\u003d\u0026quot;48\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;81\u0026quot; startChar\u003d\u0026quot;5\u0026quot; endLine\u003d\u0026quot;81\u0026quot; endChar\u003d\u0026quot;68\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;81\u0026quot; startChar\u003d\u0026quot;5\u0026quot; endLine\u003d\u0026quot;81\u0026quot; endChar\u003d\u0026quot;68\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;74\u0026quot; startChar\u003d\u0026quot;11\u0026quot; endLine\u003d\u0026quot;74\u0026quot; endChar\u003d\u0026quot;55\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;74\u0026quot; startChar\u003d\u0026quot;11\u0026quot; endLine\u003d\u0026quot;74\u0026quot; endChar\u003d\u0026quot;55\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;77\u0026quot; startChar\u003d\u0026quot;12\u0026quot; endLine\u003d\u0026quot;77\u0026quot; endChar\u003d\u0026quot;41\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_REC_08\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;Common\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;valueSets\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Substance Abuse\u0026quot; id\u003d\u0026quot;TODO\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;/\u0026gt;\n   \u0026lt;/valueSets\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;triggerScript\u0026quot;\u0026gt;\n                  \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScript\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Exclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n               \u0026lt;codes name\u003d\u0026quot;Naloxone\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Union\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;Rx\u0026quot;\u0026gt;\n                  \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                     \u0026lt;codes name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n                  \u0026lt;/expression\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;active\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Flatten\u0026quot;\u0026gt;\n                                 \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                                    \u0026lt;source alias\u003d\u0026quot;$this\u0026quot;\u0026gt;\n                                       \u0026lt;expression path\u003d\u0026quot;category\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                    \u0026lt;where xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                                       \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                          \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                             \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                          \u0026lt;/operand\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                    \u0026lt;/where\u0026gt;\n                                    \u0026lt;return\u0026gt;\n                                       \u0026lt;expression path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                       \u0026lt;/expression\u0026gt;\n                                    \u0026lt;/return\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;outpatient\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Average MME\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression name\u003d\u0026quot;TotalMME\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;MME \u0026gt;\u003d 50 mg/d?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n            \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Average MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/condition\u0026gt;\n            \u0026lt;then valueType\u003d\u0026quot;t:Boolean\u0026quot; value\u003d\u0026quot;false\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;else xsi:type\u003d\u0026quot;GreaterOrEqual\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Average MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;50\u0026quot; unit\u003d\u0026quot;mg/d\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/else\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;On Benzodiazepine\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n               \u0026lt;codes name\u003d\u0026quot;Benzodiazepines\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Exclusion Criteria\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;MME \u0026gt;\u003d 50 mg/d?\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;On Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Has Substance Abuse History\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Condition\u0026quot; codeProperty\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n               \u0026lt;codes name\u003d\u0026quot;Substance Abuse\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Summary\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Incorporate into the management plan strategies to mitigate risk; including considering offering naloxone when factors that increase risk for opioid overdose are present\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Notification\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Consider offering naloxone given following risk factor(s) for opioid overdose: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n               \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;MME \u0026gt;\u003d 50 mg/d?\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/condition\u0026gt;\n               \u0026lt;then xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Average MME (\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;ToString\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;Average MME\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;) \u0026gt;\u003d 50 mg/day, \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/then\u0026gt;\n               \u0026lt;else xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                     \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;On Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                     \u0026lt;/condition\u0026gt;\n                     \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;concurrent use of benzodiazepine, \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;else valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/else\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_04"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #4","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid decision support logic to consider offering Naloxone when factors that increase risk for opioid overdose are present.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"The purpose of this library is to determine whether increased risks for opioid overdose are present.","usage":"This library is used to recommend the prescriber/user to consider offering Naloxone when increased risks for opioid overdose are present.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"},{"type":"documentation","display":"MME Conversion Tables","url":"https://www.cdc.gov/drugoverdose/pdf/calculating_total_daily_dose-a.pdf"}],"dataRequirement":[{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/naloxone"}]},{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care"}]},{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/benzodiazepines"}]},{"type":"Condition","codeFilter":[{"path":"code","valueSet":"http://example.org/fhir/ValueSet/substance-abuse"}]}],"content":[{"contentType":"application/elm+xml","data":""}]}
{"resourceType":"Library","id":"opioidcds-recommendation-10","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-indicating-end-of-life\"\u003ehttp://example.org/fhir/ValueSet/opioids-indicating-end-of-life\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\"\u003ehttp://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"observation.html\"\u003eObservation\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecombo-code\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/illicit-drug-urine-screening\"\u003ehttp://example.org/fhir/ValueSet/illicit-drug-urine-screening\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"observation.html\"\u003eObservation\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003ecombo-code\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioid-urine-screening\"\u003ehttp://example.org/fhir/ValueSet/opioid-urine-screening\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;62\u0026quot; startChar\u003d\u0026quot;12\u0026quot; endLine\u003d\u0026quot;62\u0026quot; endChar\u003d\u0026quot;60\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;62\u0026quot; startChar\u003d\u0026quot;12\u0026quot; endLine\u003d\u0026quot;62\u0026quot; endChar\u003d\u0026quot;60\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;66\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;66\u0026quot; endChar\u003d\u0026quot;66\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;66\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;66\u0026quot; endChar\u003d\u0026quot;66\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;74\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;74\u0026quot; endChar\u003d\u0026quot;64\u0026quot; message\u003d\u0026quot;Could not resolve code path combo-code for the type of the retrieve FHIR.Observation.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;74\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;74\u0026quot; endChar\u003d\u0026quot;64\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;79\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;79\u0026quot; endChar\u003d\u0026quot;63\u0026quot; message\u003d\u0026quot;Could not resolve code path combo-code for the type of the retrieve FHIR.Observation.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;79\u0026quot; startChar\u003d\u0026quot;3\u0026quot; endLine\u003d\u0026quot;79\u0026quot; endChar\u003d\u0026quot;63\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;134\u0026quot; startChar\u003d\u0026quot;20\u0026quot; endLine\u003d\u0026quot;134\u0026quot; endChar\u003d\u0026quot;76\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;143\u0026quot; startChar\u003d\u0026quot;16\u0026quot; endLine\u003d\u0026quot;143\u0026quot; endChar\u003d\u0026quot;17\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;157\u0026quot; startChar\u003d\u0026quot;52\u0026quot; endLine\u003d\u0026quot;157\u0026quot; endChar\u003d\u0026quot;73\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;171\u0026quot; startChar\u003d\u0026quot;62\u0026quot; endLine\u003d\u0026quot;171\u0026quot; endChar\u003d\u0026quot;78\u0026quot; message\u003d\u0026quot;List-valued expression was demoted to a singleton.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_REC_10\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;Common\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Lookback Year\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression lowClosed\u003d\u0026quot;true\u0026quot; highClosed\u003d\u0026quot;true\u0026quot; xsi:type\u003d\u0026quot;Interval\u0026quot;\u0026gt;\n            \u0026lt;low xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n                  \u0026lt;operand value\u003d\u0026quot;12\u0026quot; unit\u003d\u0026quot;months\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;days\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/low\u0026gt;\n            \u0026lt;high xsi:type\u003d\u0026quot;Subtract\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Today\u0026quot;/\u0026gt;\n               \u0026lt;operand value\u003d\u0026quot;1\u0026quot; unit\u003d\u0026quot;day\u0026quot; xsi:type\u003d\u0026quot;Quantity\u0026quot;/\u0026gt;\n            \u0026lt;/high\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;triggerScript\u0026quot;\u0026gt;\n                  \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScript\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Exclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n               \u0026lt;operand dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;End Of Life Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;HasMetastaticCancer\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;Rx\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;status\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;active\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Flatten\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                                 \u0026lt;source alias\u003d\u0026quot;$this\u0026quot;\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;category\u0026quot; scope\u003d\u0026quot;Rx\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                                 \u0026lt;where xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                                    \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                 \u0026lt;/where\u0026gt;\n                                 \u0026lt;return\u0026gt;\n                                    \u0026lt;expression path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;$this\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/expression\u0026gt;\n                                 \u0026lt;/return\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;outpatient\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Illicit Drug Urine Screenings in Last 12 Months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;observation\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:Observation\u0026quot; codeProperty\u003d\u0026quot;combo-code\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Illicit Drug Screening\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n               \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;effective\u0026quot; scope\u003d\u0026quot;observation\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Lookback Year\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/where\u0026gt;\n            \u0026lt;sort\u0026gt;\n               \u0026lt;by direction\u003d\u0026quot;asc\u0026quot; xsi:type\u003d\u0026quot;ByExpression\u0026quot;\u0026gt;\n                  \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;effective\u0026quot; xsi:type\u003d\u0026quot;IdentifierRef\u0026quot;/\u0026gt;\n                  \u0026lt;/expression\u0026gt;\n               \u0026lt;/by\u0026gt;\n            \u0026lt;/sort\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Last\u0026quot;\u0026gt;\n            \u0026lt;source name\u003d\u0026quot;Get Illicit Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Opioid Drug Urine Screenings in Last 12 Months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;observation\u0026quot;\u0026gt;\n               \u0026lt;expression dataType\u003d\u0026quot;fhir:Observation\u0026quot; codeProperty\u003d\u0026quot;combo-code\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Opioid Drug Screening\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n               \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                  \u0026lt;source path\u003d\u0026quot;effective\u0026quot; scope\u003d\u0026quot;observation\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Lookback Year\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/where\u0026gt;\n            \u0026lt;sort\u0026gt;\n               \u0026lt;by direction\u003d\u0026quot;asc\u0026quot; xsi:type\u003d\u0026quot;ByExpression\u0026quot;\u0026gt;\n                  \u0026lt;expression path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source name\u003d\u0026quot;effective\u0026quot; xsi:type\u003d\u0026quot;IdentifierRef\u0026quot;/\u0026gt;\n                  \u0026lt;/expression\u0026gt;\n               \u0026lt;/by\u0026gt;\n            \u0026lt;/sort\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Last\u0026quot;\u0026gt;\n            \u0026lt;source name\u003d\u0026quot;Get Opioid Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;No Urine Screening In Last 12 Months\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;mostRecentScreening\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Most Recent Opioid Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;interpretation\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;POS\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                  \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/condition\u0026gt;\n                  \u0026lt;then xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;interpretation\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                       \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;POS\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/then\u0026gt;\n                  \u0026lt;else valueType\u003d\u0026quot;t:Boolean\u0026quot; value\u003d\u0026quot;false\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Orders Before Most Recent Opioid Screening\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;orders\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;relationship alias\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;With\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;suchThat xsi:type\u003d\u0026quot;Less\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;authoredOn\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;effective\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/suchThat\u0026gt;\n            \u0026lt;/relationship\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Prescribed Opioids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;orders\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Orders Before Most Recent Opioid Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Lower\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;GetIngredient\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;orders\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;GetOpioid\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Case\u0026quot;\u0026gt;\n            \u0026lt;comparand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3299-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Acetaminophen\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;14184-6\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Atropine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;16485-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Bromodiphenhydramine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3408-2\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Brompheniramine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3414-0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Buprenorphine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3421-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Butalbital\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;12333-1\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Butorphanol\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3423-1\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Caffeine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;21142-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Carisoprodol\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;16605-8\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Chlorcyclizine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3467-8\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Chlorpheniramine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3507-1\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Codeine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;14066-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Dihydrocodeine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3571-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Diphenhydramine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;11235-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Fentanyl\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;12308-3\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Hydrocodone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;9834-3\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Hydromorphone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;14071\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Ibuprofen\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3711-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Levorphanol\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3746-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Meperidine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3773-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Methadone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3830-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Morphine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;42618-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Naloxone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;12309-1\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Naltrexone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;10998-3\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Oxycodone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;11247-4\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Oxymorphone\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3917-2\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Pentazocine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3962-8\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Phenylephrine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3965-1\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Phenylpropanolamine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;11000-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Promethazine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;4003-0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Pseudoephedrine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;4009-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Pyrilamine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;65807-0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Tapentadol\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;43219-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Tramadol\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;else xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n               \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Unknown code: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;/else\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;value\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Missing Opioids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n            \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/condition\u0026gt;\n            \u0026lt;then xsi:type\u003d\u0026quot;Except\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n                  \u0026lt;source alias\u003d\u0026quot;Prescriptions\u0026quot;\u0026gt;\n                     \u0026lt;expression name\u003d\u0026quot;Prescribed Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Lower\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;GetOpioid\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                                 \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/then\u0026gt;\n            \u0026lt;else xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Null\u0026quot;/\u0026gt;\n               \u0026lt;asTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n                  \u0026lt;elementType name\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n               \u0026lt;/asTypeSpecifier\u0026gt;\n            \u0026lt;/else\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Has Missing Opioids?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Missing Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Opioids From Most Recent Screening\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;mostRecentScreening\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression xsi:type\u003d\u0026quot;Union\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Lower\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;GetOpioid\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                    \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source path\u003d\u0026quot;code\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                    \u0026lt;/operand\u0026gt;\n                                    \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                        \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                                 \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                    \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                    \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/condition\u0026gt;\n                        \u0026lt;then xsi:type\u003d\u0026quot;Lower\u0026quot;\u0026gt;\n                           \u0026lt;operand name\u003d\u0026quot;GetOpioid\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                          \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                             \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                                \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                                \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                             \u0026lt;/source\u0026gt;\n                                          \u0026lt;/source\u0026gt;\n                                       \u0026lt;/operand\u0026gt;\n                                       \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/then\u0026gt;\n                        \u0026lt;else asType\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n                              \u0026lt;operand xsi:type\u003d\u0026quot;List\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/else\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/expression\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Unprescribed Opioids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;mostRecentScreeningOpioids\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Get Opioids From Most Recent Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;relationship alias\u003d\u0026quot;ingredients\u0026quot; xsi:type\u003d\u0026quot;With\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Prescribed Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;suchThat xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;In\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;mostRecentScreeningOpioids\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n                        \u0026lt;operand name\u003d\u0026quot;ingredients\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/suchThat\u0026gt;\n            \u0026lt;/relationship\u0026gt;\n            \u0026lt;return\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;mostRecentScreeningOpioids\u0026quot; xsi:type\u003d\u0026quot;AliasRef\u0026quot;/\u0026gt;\n            \u0026lt;/return\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Has Unprescribed Opioids?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Unprescribed Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Positive Illicit Drug Screening\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n            \u0026lt;source alias\u003d\u0026quot;mostRecentScreening\u0026quot;\u0026gt;\n               \u0026lt;expression name\u003d\u0026quot;Most Recent Illicit Drug Urine Screenings in Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/source\u0026gt;\n            \u0026lt;where xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;interpretation\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;POS\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n                  \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                        \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                           \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/condition\u0026gt;\n                  \u0026lt;then xsi:type\u003d\u0026quot;Equal\u0026quot;\u0026gt;\n                     \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                              \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source path\u003d\u0026quot;interpretation\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                       \u0026lt;operand path\u003d\u0026quot;component\u0026quot; scope\u003d\u0026quot;mostRecentScreening\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                                       \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/source\u0026gt;\n                              \u0026lt;/operand\u0026gt;\n                              \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;POS\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/then\u0026gt;\n                  \u0026lt;else valueType\u003d\u0026quot;t:Boolean\u0026quot; value\u003d\u0026quot;false\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/where\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Has Illicit Drugs in Screening?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Positive Illicit Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Not\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Exclusion Criteria\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;AnyTrue\u0026quot;\u0026gt;\n                  \u0026lt;source name\u003d\u0026quot;ProbableDaysInRange\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Get Active Ambulatory Opioid Rx\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;90\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;80\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                  \u0026lt;/source\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;No Urine Screening In Last 12 Months\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;Has Missing Opioids?\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Has Unprescribed Opioids?\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Has Illicit Drugs in Screening?\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;GetIllicitDrug\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot; xsi:type\u003d\u0026quot;FunctionDef\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Case\u0026quot;\u0026gt;\n            \u0026lt;comparand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3397-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Cocaine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;14267-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Methylenedioxymethamphetamine (MDMA)\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;29868-7\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Gamma Hydroxybutyric Acid (GHB)\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;12327-3\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Ketamine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3732-5\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Lysergic Acid Diethylamide (LSD)\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3779-6\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Methamphetamine\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;17504-2\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Psilocybin\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;41020-9\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Flunitrazepam (Rohypnol)\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;caseItem\u0026gt;\n               \u0026lt;when valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;3426-4\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Tetrahydrocannabinol (THC)\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;/caseItem\u0026gt;\n            \u0026lt;else xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n               \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Unknown code: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;OperandRef\u0026quot;/\u0026gt;\n            \u0026lt;/else\u0026gt;\n         \u0026lt;/expression\u0026gt;\n         \u0026lt;operand name\u003d\u0026quot;value\u0026quot;\u0026gt;\n            \u0026lt;operandTypeSpecifier name\u003d\u0026quot;t:String\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/operand\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inconsistent Illicit Drugs\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Found the following illicit drug(s) in urine drug screen: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n               \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n                  \u0026lt;operand xsi:type\u003d\u0026quot;IsNull\u0026quot;\u0026gt;\n                     \u0026lt;operand name\u003d\u0026quot;GetIllicitDrug\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                                 \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                    \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                       \u0026lt;source name\u003d\u0026quot;Positive Illicit Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                                    \u0026lt;/source\u0026gt;\n                                 \u0026lt;/operand\u0026gt;\n                                 \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/source\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/condition\u0026gt;\n               \u0026lt;then name\u003d\u0026quot;GetIllicitDrug\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;interpretation\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;Positive Illicit Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/then\u0026gt;\n               \u0026lt;else name\u003d\u0026quot;GetIllicitDrug\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand path\u003d\u0026quot;value\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                     \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                        \u0026lt;source xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                           \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                              \u0026lt;source path\u003d\u0026quot;code\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                                 \u0026lt;source name\u003d\u0026quot;Positive Illicit Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                              \u0026lt;/source\u0026gt;\n                           \u0026lt;/operand\u0026gt;\n                           \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                        \u0026lt;/source\u0026gt;\n                     \u0026lt;/source\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/else\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Has Opioids in Screening?\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;ToList\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Positive Opioid Drug Screening\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inconsistent Unprescribed Opioids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Found the following unprescribed opioid(s): \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Unprescribed Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inconsistent Missing Opioids\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Concatenate\u0026quot;\u0026gt;\n            \u0026lt;operand valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;The following opioids are missing from the screening: \u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Missing Opioids\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_10"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #10","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid decision support logic to evaluate whether the patient has had a urine screening in the past 12 months and provide analysis.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"The purpose of this library is to determine whether the patient has had a urine screening in the past 12 months. Is so, then check the results for missing opioids that are prescribed, present opioids that aren\u0027t prescribed or present illicit drugs.","usage":"This library is used to notify the prescriber/user whether the patient has had a urine screening in the past 12 months and to provide analysis if true.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"}],"dataRequirement":[{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-indicating-end-of-life"}]},{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care"}]},{"type":"Observation","codeFilter":[{"path":"combo-code","valueSet":"http://example.org/fhir/ValueSet/illicit-drug-urine-screening"}]},{"type":"Observation","codeFilter":[{"path":"combo-code","valueSet":"http://example.org/fhir/ValueSet/opioid-urine-screening"}]}],"content":[{"contentType":"application/elm+xml","data":"\u003d"}]}
{"resourceType":"Library","id":"opioidcds-recommendation-11","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n      \u003ch2\u003eParticipants\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eKensaku Kawamoto, MD, PhD, MHS\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eBryn Rhodes\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eFloyd Eisenberg, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eAuthor\u003c/td\u003e\n          \u003ctd\u003eRobert McClure, MD, MPH\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eRelated Artifacts\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDocumentation\u003c/td\u003e\n          \u003ctd\u003eCDC guideline for prescribing opioids for chronic pain\u003c/td\u003e\n          \u003ctd\u003ehttps://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003eDepends On\u003c/td\u003e\n          \u003ctd/\u003e\n          \u003ctd\u003e\n            \u003ccode\u003ehttp://example.org/fhir/Library/opioidcds-common\u003c/code\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eData Requirements\u003c/h2\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/benzodiazepines\"\u003ehttp://example.org/fhir/ValueSet/benzodiazepines\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ctable class\u003d\"grid\"\u003e\n        \u003ctr\u003e\n          \u003ctd colspan\u003d\"2\"\u003e\n            \u003cb\u003eType\u003c/b\u003e: \n            \u003ca href\u003d\"medicationrequest.html\"\u003eMedicationRequest\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr style\u003d\"background-color: #efefef\"\u003e\n          \u003ctd\u003eFilter\u003c/td\u003e\n          \u003ctd\u003eValue\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd\u003emedicationCodeableConcept\u003c/td\u003e\n          \u003ctd\u003eIn ValueSet \n            \u003ca href\u003d\"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\"\u003ehttp://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care\u003c/a\u003e\n          \u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n      \u003ch2\u003eContents\u003c/h2\u003e\n      \u003cp\u003e\n        \u003ccode\u003eapplication/elm+xml\u003c/code\u003e\n      \u003c/p\u003e\n      \u003cpre\u003e\n        \u003ccode class\u003d\"language-xml\"\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;library xmlns\u003d\u0026quot;urn:hl7-org:elm:r1\u0026quot; xmlns:t\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot; xmlns:xsi\u003d\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; xmlns:xsd\u003d\u0026quot;http://www.w3.org/2001/XMLSchema\u0026quot; xmlns:fhir\u003d\u0026quot;http://hl7.org/fhir\u0026quot; xmlns:qdm43\u003d\u0026quot;urn:healthit-gov:qdm:v4_3\u0026quot; xmlns:qdm53\u003d\u0026quot;urn:healthit-gov:qdm:v5_3\u0026quot; xmlns:a\u003d\u0026quot;urn:hl7-org:cql-annotations:r1\u0026quot;\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;54\u0026quot; startChar\u003d\u0026quot;13\u0026quot; endLine\u003d\u0026quot;54\u0026quot; endChar\u003d\u0026quot;57\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;54\u0026quot; startChar\u003d\u0026quot;13\u0026quot; endLine\u003d\u0026quot;54\u0026quot; endChar\u003d\u0026quot;57\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;58\u0026quot; startChar\u003d\u0026quot;14\u0026quot; endLine\u003d\u0026quot;58\u0026quot; endChar\u003d\u0026quot;77\u0026quot; message\u003d\u0026quot;Could not resolve code path medicationCodeableConcept for the type of the retrieve FHIR.MedicationRequest.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;annotation startLine\u003d\u0026quot;58\u0026quot; startChar\u003d\u0026quot;14\u0026quot; endLine\u003d\u0026quot;58\u0026quot; endChar\u003d\u0026quot;77\u0026quot; message\u003d\u0026quot;Could not resolve membership operator for terminology target of the retrieve.\u0026quot; errorType\u003d\u0026quot;semantic\u0026quot; errorSeverity\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;a:CqlToElmError\u0026quot;/\u0026gt;\n   \u0026lt;identifier id\u003d\u0026quot;OpioidCDS_STU4_REC_11\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;schemaIdentifier id\u003d\u0026quot;urn:hl7-org:elm\u0026quot; version\u003d\u0026quot;r1\u0026quot;/\u0026gt;\n   \u0026lt;usings\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;System\u0026quot; uri\u003d\u0026quot;urn:hl7-org:elm-types:r1\u0026quot;/\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;FHIR\u0026quot; uri\u003d\u0026quot;http://hl7.org/fhir\u0026quot; version\u003d\u0026quot;3.2.0\u0026quot;/\u0026gt;\n   \u0026lt;/usings\u0026gt;\n   \u0026lt;includes\u0026gt;\n      \u0026lt;def localIdentifier\u003d\u0026quot;Common\u0026quot; path\u003d\u0026quot;OpioidCDS_STU4_Common\u0026quot; version\u003d\u0026quot;0.1.0\u0026quot;/\u0026gt;\n   \u0026lt;/includes\u0026gt;\n   \u0026lt;parameters\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;ContextPrescriptions\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;parameterTypeSpecifier xsi:type\u003d\u0026quot;ListTypeSpecifier\u0026quot;\u0026gt;\n            \u0026lt;elementType name\u003d\u0026quot;fhir:MedicationRequest\u0026quot; xsi:type\u003d\u0026quot;NamedTypeSpecifier\u0026quot;/\u0026gt;\n         \u0026lt;/parameterTypeSpecifier\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/parameters\u0026gt;\n   \u0026lt;statements\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Patient\u0026quot; context\u003d\u0026quot;Patient\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;SingletonFrom\u0026quot;\u0026gt;\n            \u0026lt;operand dataType\u003d\u0026quot;fhir:Patient\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event For Benzodiazepine\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;triggerScript\u0026quot;\u0026gt;\n                  \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where name\u003d\u0026quot;IsBenzodiazepine\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScript\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Validate Trigger Event For Ambulatory Care Abuse Potential\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Query\u0026quot;\u0026gt;\n               \u0026lt;source alias\u003d\u0026quot;triggerScript\u0026quot;\u0026gt;\n                  \u0026lt;expression name\u003d\u0026quot;ContextPrescriptions\u0026quot; xsi:type\u003d\u0026quot;ParameterRef\u0026quot;/\u0026gt;\n               \u0026lt;/source\u0026gt;\n               \u0026lt;where name\u003d\u0026quot;IsOpioidWithAmbulatoryAbusePotential\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;ToCode\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;FunctionRef\u0026quot;\u0026gt;\n                     \u0026lt;operand xsi:type\u003d\u0026quot;Indexer\u0026quot;\u0026gt;\n                        \u0026lt;operand path\u003d\u0026quot;coding\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;\u0026gt;\n                           \u0026lt;source path\u003d\u0026quot;medication\u0026quot; scope\u003d\u0026quot;triggerScript\u0026quot; xsi:type\u003d\u0026quot;Property\u0026quot;/\u0026gt;\n                        \u0026lt;/operand\u0026gt;\n                        \u0026lt;operand valueType\u003d\u0026quot;t:Integer\u0026quot; value\u003d\u0026quot;0\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n                     \u0026lt;/operand\u0026gt;\n                  \u0026lt;/operand\u0026gt;\n               \u0026lt;/where\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;On Benzodiazepine\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event For Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n               \u0026lt;operand dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Benzodiazepines\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Opioid with Ambulatory Care Abuse Potential\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event For Ambulatory Care Abuse Potential\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;Exists\u0026quot;\u0026gt;\n               \u0026lt;operand dataType\u003d\u0026quot;fhir:MedicationRequest\u0026quot; codeProperty\u003d\u0026quot;medicationCodeableConcept\u0026quot; xsi:type\u003d\u0026quot;Retrieve\u0026quot;\u0026gt;\n                  \u0026lt;codes name\u003d\u0026quot;Ambulatory Abuse Potential Opioids\u0026quot; libraryName\u003d\u0026quot;Common\u0026quot; xsi:type\u003d\u0026quot;ValueSetRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n            \u0026lt;/operand\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Inclusion Criteria\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n            \u0026lt;operand xsi:type\u003d\u0026quot;And\u0026quot;\u0026gt;\n               \u0026lt;operand xsi:type\u003d\u0026quot;Or\u0026quot;\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event For Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n                  \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event For Ambulatory Care Abuse Potential\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n               \u0026lt;/operand\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;On Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/operand\u0026gt;\n            \u0026lt;operand name\u003d\u0026quot;Opioid with Ambulatory Care Abuse Potential\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Indicator\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;warning\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Summary\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;Avoid prescribing opioid pain medication and benzodiazepine concurrently whenever possible.\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n      \u0026lt;/def\u0026gt;\n      \u0026lt;def name\u003d\u0026quot;Get Detail\u0026quot; context\u003d\u0026quot;Patient\u0026quot; accessLevel\u003d\u0026quot;Public\u0026quot;\u0026gt;\n         \u0026lt;expression xsi:type\u003d\u0026quot;If\u0026quot;\u0026gt;\n            \u0026lt;condition asType\u003d\u0026quot;t:Boolean\u0026quot; xsi:type\u003d\u0026quot;As\u0026quot;\u0026gt;\n               \u0026lt;operand name\u003d\u0026quot;Validate Trigger Event For Benzodiazepine\u0026quot; xsi:type\u003d\u0026quot;ExpressionRef\u0026quot;/\u0026gt;\n            \u0026lt;/condition\u0026gt;\n            \u0026lt;then valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;The benzodiazepine prescription request is concurrent with an active opioid prescription\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n            \u0026lt;else valueType\u003d\u0026quot;t:String\u0026quot; value\u003d\u0026quot;The opioid prescription request is concurrent with an active benzodiazepine prescription\u0026quot; xsi:type\u003d\u0026quot;Literal\u0026quot;/\u0026gt;\n         \u0026lt;/expression\u0026gt;\n      \u0026lt;/def\u0026gt;\n   \u0026lt;/statements\u0026gt;\n\u0026lt;/library\u0026gt;\n\u003c/code\u003e\n      \u003c/pre\u003e\n    \u003c/div\u003e"},"identifier":[{"use":"official","value":"OpioidCDS_REC_11"}],"version":"0.1.0","title":"Opioid CDS Logic for recommendation #11","status":"active","experimental":false,"type":{"coding":[{"system":"http://terminology.hl7.org/CodeSystem/library-type","code":"logic-library","display":"Logic Library"}]},"date":"2018-03-25T13:49:09-06:00","publisher":"Centers for Disease Control and Prevention (CDC)","description":"Opioid decision support logic to avoid prescribing opioid pain medication and benzodiazepines concurrently whenever possible.","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"182888003","display":"Medication requested (situation)"}]}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"focus","display":"Clinical Focus"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"82423001","display":"Chronic pain (finding)"}]}}],"jurisdiction":[{"coding":[{"system":"urn:iso:std:iso:3166","code":"US","display":"United States of America"}]}],"purpose":"The purpose of this library is to determine whether opioid pain medication and benzodiazepines have been prescribed concurrently.","usage":"This library is used to notify the prescriber/user to avoid prescribing opioid pain medication and benzodiazepines concurrently.","copyright":"© CDC 2016+.","topic":[{"text":"Opioid Prescribing"}],"author":[{"name":"Kensaku Kawamoto, MD, PhD, MHS"},{"name":"Bryn Rhodes"},{"name":"Floyd Eisenberg, MD, MPH"},{"name":"Robert McClure, MD, MPH"}],"relatedArtifact":[{"type":"documentation","display":"CDC guideline for prescribing opioids for chronic pain","url":"https://guidelines.gov/summaries/summary/50153/cdc-guideline-for-prescribing-opioids-for-chronic-pain---united-states-2016#420"},{"type":"depends-on","resource":"http://example.org/fhir/Library/opioidcds-common"}],"dataRequirement":[{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/benzodiazepines"}]},{"type":"MedicationRequest","codeFilter":[{"path":"medicationCodeableConcept","valueSet":"http://example.org/fhir/ValueSet/opioids-abused-in-ambulatory-care"}]}],"content":[{"contentType":"application/elm+xml","data":"\u003d\u003d"}]}
{"resourceType":"Library","id":"library-fhir-helpers-predecessor","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-fhir-helpers-predecessor\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eFHIRHelpers\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e1.6\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eFHIR Helpers\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003elogic-library\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eactive\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eFHIR Helpers\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eFHIR Helpers\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eRelated: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr style\u003d\"vertical-align: top;\"\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003edepends-on\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eResource: \u003c/b\u003e\n                     \u003cbr/\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ereference: \u003c/b\u003e\n                           \u003cspan\u003eLibrary/fhir-model-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etitle: \u003c/b\u003e\n                     \u003cspan\u003eFHIR Helpers\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003etext/cql\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003elibrary-fhir-helpers-content.cql\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"FHIRHelpers"}],"version":"1.6","title":"FHIR Helpers","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2016-11-14","description":"FHIR Helpers","topic":[{"text":"FHIR Helpers"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/fhir-model-definition"},{"type":"successor","resource":"http://example.org/fhir/Library/library-fhir-helpers"}],"content":[{"contentType":"text/cql","data":"","url":"library-fhir-helpers-content.cql","title":"FHIR Helpers"}]}
{"resourceType":"Library","id":"library-quick-model-definition","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eId: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eLibrary/library-quick-model-definition\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eIdentifier: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cb\u003evalue: \u003c/b\u003e\n                  \u003cspan\u003eQUICK\u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eVersion: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e1.0.0\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTitle: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eQUICK Model Definition\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eType: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan\u003e\n                     \u003cspan\u003e\n                        \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                           \u003cb\u003ecode: \u003c/b\u003e\n                           \u003cspan\u003emodel-definition\u003c/span\u003e\n                        \u003c/span\u003e\n                     \u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eStatus: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003edraft\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eDescription: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003eModel definition for the QUICK Logical Model\u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eTopic: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-right: 25px;\"\u003e\n                  \u003cspan style\u003d\"padding-left: 25px;\"\u003e\n                     \u003cb\u003etext: \u003c/b\u003e\n                     \u003cspan\u003eQUICK\u003c/span\u003e\n                  \u003c/span\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n         \u003cp/\u003e\n         \u003ctable class\u003d\"grid dict\"\u003e\n            \u003ctr\u003e\n               \u003ctd\u003e\n                  \u003cb\u003eContent: \u003c/b\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n               \u003ctd style\u003d\"padding-left: 25px; padding-right: 25px;\"\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003etype: \u003c/b\u003e\n                     \u003cspan\u003eapplication/xml\u003c/span\u003e\n                  \u003c/p\u003e\n                  \u003cp style\u003d\"margin-bottom: 5px;\"\u003e\n                     \u003cb\u003eurl: \u003c/b\u003e\n                     \u003cspan\u003ehttp://cqlrepository.org/quick-modelinfo.xml\u003c/span\u003e\n                  \u003c/p\u003e\n               \u003c/td\u003e\n            \u003c/tr\u003e\n         \u003c/table\u003e\n      \u003c/div\u003e"},"identifier":[{"use":"official","value":"QUICK"}],"version":"1.0.0","title":"QUICK Model Definition","status":"draft","type":{"coding":[{"code":"model-definition"}]},"date":"2016-07-08","description":"Model definition for the QUICK Logical Model","topic":[{"text":"QUICK"}],"content":[{"contentType":"application/xml","url":"http://cqlrepository.org/quick-modelinfo.xml"}]}
{"resourceType":"Library","id":"zika-virus-intervention-logic","text":{"status":"generated","div":"\u003cdiv xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003eZika Virus Intervention Logic\u003c/div\u003e"},"identifier":[{"use":"official","value":"zika-virus-intervention-logic"}],"version":"1.0.0","title":"Zika Virus Intervention Logic","status":"active","experimental":true,"type":{"coding":[{"code":"logic-library"}]},"date":"2016-11-14","description":"Decision support logic for managing zika virus infection","useContext":[{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"age"},"valueRange":{"low":{"value":12,"unit":"a"}}},{"code":{"system":"http://terminology.hl7.org/CodeSystem/usage-context-type","code":"user"},"valueCodeableConcept":{"coding":[{"system":"http://snomed.info/sct","code":"309343006","display":"Physician"}]}}],"topic":[{"text":"Zika Virus Management"}],"relatedArtifact":[{"type":"depends-on","resource":"http://example.org/fhir/Library/fhir-model-definition"},{"type":"depends-on","resource":"http://hl7.org/fhir/ValueSet/zika-affected-area"}],"parameter":[{"name":"Patient","use":"in","type":"Patient"},{"name":"Current Encounter","use":"in","type":"Encounter"}],"dataRequirement":[{"type":"Condition","codeFilter":[{"path":"code","valueSet":"urn:oid:X.Y.Z"}]},{"type":"Observation","codeFilter":[{"path":"code","valueSet":"urn:oid:X.Y.Z"}]},{"type":"Condition","codeFilter":[{"path":"code","valueSet":"urn:oid:2.16.840.1.114222.4.11.7459"}]}],"content":[{"contentType":"text/cql","data":"\u003d\u003d","url":"library-zika-virus-intervention-logic-content.cql","title":"Zika Virus Intervention Logic"}]}