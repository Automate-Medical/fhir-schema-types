# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type ManufacturedItemDefinition {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  manufacturedDoseForm: CodeableConcept!
  unitOfPresentation: CodeableConcept
  manufacturer: [Reference]
  ingredient: [CodeableReference]
  property: [ManufacturedItemDefinitionProperty]
}

type ManufacturedItemDefinitionProperty {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
  valueDate: date  _valueDate: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueAttachment: Attachment
}

input ManufacturedItemDefinitionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  manufacturedDoseForm: CodeableConceptInput!
  unitOfPresentation: CodeableConceptInput
  manufacturer: [ReferenceInput]
  ingredient: [CodeableReferenceInput]
  property: [ManufacturedItemDefinitionPropertyInput]
}

input ManufacturedItemDefinitionPropertyInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  valueCodeableConcept: CodeableConceptInput
  valueQuantity: QuantityInput
  valueDate: date  _valueDate: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueAttachment: AttachmentInput
}

type ManufacturedItemDefinitionReadType {
  ManufacturedItemDefinition(id: ID!): ManufacturedItemDefinition
}

type ManufacturedItemDefinitionListType {
  ManufacturedItemDefinitionList(_filter: String
    dose_form: [token]
    identifier: [token]
    ingredient: [reference]
    ingredient_code: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [ManufacturedItemDefinition]
}

type ManufacturedItemDefinitionConnectionType {
  ManufacturedItemDefinitionConection(_filter: String
    dose_form: [token]
    identifier: [token]
    ingredient: [reference]
    ingredient_code: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): ManufacturedItemDefinitionConnection
}

type ManufacturedItemDefinitionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [ManufacturedItemDefinitionEdge]
}

type ManufacturedItemDefinitionEdge {
  mode: String
  score: Float
  resource: ManufacturedItemDefinition
}

type ManufacturedItemDefinitionCreateType {
  ManufacturedItemDefinitionCreate(resource: ManufacturedItemDefinitionInput): ManufacturedItemDefinitionCreation
}

type ManufacturedItemDefinitionCreation {
  location: String
  resource: ManufacturedItemDefinition
  information: OperationOutcome
}

type ManufacturedItemDefinitionUpdateType {
  ManufacturedItemDefinitionUpdate(id: ID, resource: ManufacturedItemDefinitionInput): ManufacturedItemDefinitionUpdate
}

type ManufacturedItemDefinitionUpdate {
  resource: ManufacturedItemDefinition
  information: OperationOutcome
}

type ManufacturedItemDefinitionDeleteType {
  ManufacturedItemDefinitionDelete(id: ID): ManufacturedItemDefinitionDelete
}

type ManufacturedItemDefinitionDelete {
  information: OperationOutcome
}

