# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type CatalogEntry {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  name: String  _name: ElementBase
  type: code  _type: ElementBase
  status: code  _status: ElementBase
  effectivePeriod: Period
  orderable: Boolean  _orderable: ElementBase
  referencedItem: Reference!
  relatedEntry: [CatalogEntryRelatedEntry]
  updatedBy: Reference
  note: [Annotation]
  estimatedDuration: Duration
  billingCode: [CodeableConcept]
  billingSummary: String  _billingSummary: ElementBase
  scheduleSummary: String  _scheduleSummary: ElementBase
  limitationSummary: String  _limitationSummary: ElementBase
  regulatorySummary: String  _regulatorySummary: ElementBase
}

type CatalogEntryRelatedEntry {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  relationship: code  _relationship: ElementBase
  target: Reference!
}

input CatalogEntryInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  name: String  _name: ElementBase
  type: code  _type: ElementBase
  status: code  _status: ElementBase
  effectivePeriod: PeriodInput
  orderable: Boolean  _orderable: ElementBase
  referencedItem: ReferenceInput!
  relatedEntry: [CatalogEntryRelatedEntryInput]
  updatedBy: ReferenceInput
  note: [AnnotationInput]
  estimatedDuration: DurationInput
  billingCode: [CodeableConceptInput]
  billingSummary: String  _billingSummary: ElementBase
  scheduleSummary: String  _scheduleSummary: ElementBase
  limitationSummary: String  _limitationSummary: ElementBase
  regulatorySummary: String  _regulatorySummary: ElementBase
}

input CatalogEntryRelatedEntryInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  relationship: code  _relationship: ElementBase
  target: ReferenceInput!
}

type CatalogEntryReadType {
  CatalogEntry(id: ID!): CatalogEntry
}

type CatalogEntryListType {
  CatalogEntryList(_filter: String
    identifier: [token]
    name: [String]
    orderable: [token]
    referenced_item: [reference]
    related_entry: [reference]
    status: [token]
    type: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [CatalogEntry]
}

type CatalogEntryConnectionType {
  CatalogEntryConection(_filter: String
    identifier: [token]
    name: [String]
    orderable: [token]
    referenced_item: [reference]
    related_entry: [reference]
    status: [token]
    type: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): CatalogEntryConnection
}

type CatalogEntryConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [CatalogEntryEdge]
}

type CatalogEntryEdge {
  mode: String
  score: Float
  resource: CatalogEntry
}

type CatalogEntryCreateType {
  CatalogEntryCreate(resource: CatalogEntryInput): CatalogEntryCreation
}

type CatalogEntryCreation {
  location: String
  resource: CatalogEntry
  information: OperationOutcome
}

type CatalogEntryUpdateType {
  CatalogEntryUpdate(id: ID, resource: CatalogEntryInput): CatalogEntryUpdate
}

type CatalogEntryUpdate {
  resource: CatalogEntry
  information: OperationOutcome
}

type CatalogEntryDeleteType {
  CatalogEntryDelete(id: ID): CatalogEntryDelete
}

type CatalogEntryDelete {
  information: OperationOutcome
}

