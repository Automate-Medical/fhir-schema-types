# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type Task {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: ElementBase
  instantiatesUri: uri  _instantiatesUri: ElementBase
  basedOn: [Reference]
  groupIdentifier: Identifier
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: CodeableConcept
  businessStatus: CodeableConcept
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  code: CodeableConcept
  description: String  _description: ElementBase
  focus: Reference
  for: Reference
  encounter: Reference
  executionPeriod: Period
  authoredOn: dateTime  _authoredOn: ElementBase
  lastModified: dateTime  _lastModified: ElementBase
  requester: Reference
  performerType: [CodeableConcept]
  owner: Reference
  location: Reference
  reasonCode: CodeableConcept
  reasonReference: Reference
  insurance: [Reference]
  note: [Annotation]
  relevantHistory: [Reference]
  restriction: TaskRestriction
  input: [TaskInput]
  output: [TaskOutput]
}

type TaskRestriction {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  repetitions: positiveInt  _repetitions: ElementBase
  period: Period
  recipient: [Reference]
}

type TaskInput {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueInteger64: integer64  _valueInteger64: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

type TaskOutput {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueInteger64: integer64  _valueInteger64: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: Address
  valueAge: Age
  valueAnnotation: Annotation
  valueAttachment: Attachment
  valueCodeableConcept: CodeableConcept
  valueCoding: Coding
  valueContactPoint: ContactPoint
  valueCount: Count
  valueDistance: Distance
  valueDuration: Duration
  valueHumanName: HumanName
  valueIdentifier: Identifier
  valueMoney: Money
  valuePeriod: Period
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueSampledData: SampledData
  valueSignature: Signature
  valueTiming: Timing
  valueContactDetail: ContactDetail
  valueContributor: Contributor
  valueDataRequirement: DataRequirement
  valueExpression: Expression
  valueParameterDefinition: ParameterDefinition
  valueRelatedArtifact: RelatedArtifact
  valueTriggerDefinition: TriggerDefinition
  valueUsageContext: UsageContext
  valueDosage: Dosage
  valueMeta: Meta
}

input TaskInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  instantiatesCanonical: canonical  _instantiatesCanonical: ElementBase
  instantiatesUri: uri  _instantiatesUri: ElementBase
  basedOn: [ReferenceInput]
  groupIdentifier: IdentifierInput
  partOf: [ReferenceInput]
  status: code  _status: ElementBase
  statusReason: CodeableConceptInput
  businessStatus: CodeableConceptInput
  intent: code  _intent: ElementBase
  priority: code  _priority: ElementBase
  code: CodeableConceptInput
  description: String  _description: ElementBase
  focus: ReferenceInput
  for: ReferenceInput
  encounter: ReferenceInput
  executionPeriod: PeriodInput
  authoredOn: dateTime  _authoredOn: ElementBase
  lastModified: dateTime  _lastModified: ElementBase
  requester: ReferenceInput
  performerType: [CodeableConceptInput]
  owner: ReferenceInput
  location: ReferenceInput
  reasonCode: CodeableConceptInput
  reasonReference: ReferenceInput
  insurance: [ReferenceInput]
  note: [AnnotationInput]
  relevantHistory: [ReferenceInput]
  restriction: TaskRestrictionInput
  input: [TaskInputInput]
  output: [TaskOutputInput]
}

input TaskRestrictionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  repetitions: positiveInt  _repetitions: ElementBase
  period: PeriodInput
  recipient: [ReferenceInput]
}

input TaskInputInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueInteger64: integer64  _valueInteger64: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: AddressInput
  valueAge: AgeInput
  valueAnnotation: AnnotationInput
  valueAttachment: AttachmentInput
  valueCodeableConcept: CodeableConceptInput
  valueCoding: CodingInput
  valueContactPoint: ContactPointInput
  valueCount: CountInput
  valueDistance: DistanceInput
  valueDuration: DurationInput
  valueHumanName: HumanNameInput
  valueIdentifier: IdentifierInput
  valueMoney: MoneyInput
  valuePeriod: PeriodInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueRatio: RatioInput
  valueSampledData: SampledDataInput
  valueSignature: SignatureInput
  valueTiming: TimingInput
  valueContactDetail: ContactDetailInput
  valueContributor: ContributorInput
  valueDataRequirement: DataRequirementInput
  valueExpression: ExpressionInput
  valueParameterDefinition: ParameterDefinitionInput
  valueRelatedArtifact: RelatedArtifactInput
  valueTriggerDefinition: TriggerDefinitionInput
  valueUsageContext: UsageContextInput
  valueDosage: DosageInput
  valueMeta: MetaInput
}

input TaskOutputInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  valueBase64Binary: base64Binary  _valueBase64Binary: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueCanonical: canonical  _valueCanonical: ElementBase
  valueCode: code  _valueCode: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueId: ID  _valueId: ElementBase
  valueInstant: instant  _valueInstant: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueInteger64: integer64  _valueInteger64: ElementBase
  valueMarkdown: markdown  _valueMarkdown: ElementBase
  valueOid: oid  _valueOid: ElementBase
  valuePositiveInt: positiveInt  _valuePositiveInt: ElementBase
  valueString: String  _valueString: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueUnsignedInt: unsignedInt  _valueUnsignedInt: ElementBase
  valueUri: uri  _valueUri: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueUuid: uuid  _valueUuid: ElementBase
  valueAddress: AddressInput
  valueAge: AgeInput
  valueAnnotation: AnnotationInput
  valueAttachment: AttachmentInput
  valueCodeableConcept: CodeableConceptInput
  valueCoding: CodingInput
  valueContactPoint: ContactPointInput
  valueCount: CountInput
  valueDistance: DistanceInput
  valueDuration: DurationInput
  valueHumanName: HumanNameInput
  valueIdentifier: IdentifierInput
  valueMoney: MoneyInput
  valuePeriod: PeriodInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueRatio: RatioInput
  valueSampledData: SampledDataInput
  valueSignature: SignatureInput
  valueTiming: TimingInput
  valueContactDetail: ContactDetailInput
  valueContributor: ContributorInput
  valueDataRequirement: DataRequirementInput
  valueExpression: ExpressionInput
  valueParameterDefinition: ParameterDefinitionInput
  valueRelatedArtifact: RelatedArtifactInput
  valueTriggerDefinition: TriggerDefinitionInput
  valueUsageContext: UsageContextInput
  valueDosage: DosageInput
  valueMeta: MetaInput
}

type TaskReadType {
  Task(id: ID!): Task
}

type TaskListType {
  TaskList(_filter: String
    authored_on: [date]
    based_on: [reference]
    business_status: [token]
    code: [token]
    encounter: [reference]
    focus: [reference]
    group_identifier: [token]
    identifier: [token]
    intent: [token]
    modified: [date]
    owner: [reference]
    part_of: [reference]
    patient: [reference]
    performer: [token]
    period: [date]
    priority: [token]
    requester: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [Task]
}

type TaskConnectionType {
  TaskConection(_filter: String
    authored_on: [date]
    based_on: [reference]
    business_status: [token]
    code: [token]
    encounter: [reference]
    focus: [reference]
    group_identifier: [token]
    identifier: [token]
    intent: [token]
    modified: [date]
    owner: [reference]
    part_of: [reference]
    patient: [reference]
    performer: [token]
    period: [date]
    priority: [token]
    requester: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): TaskConnection
}

type TaskConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [TaskEdge]
}

type TaskEdge {
  mode: String
  score: Float
  resource: Task
}

type TaskCreateType {
  TaskCreate(resource: TaskInput): TaskCreation
}

type TaskCreation {
  location: String
  resource: Task
  information: OperationOutcome
}

type TaskUpdateType {
  TaskUpdate(id: ID, resource: TaskInput): TaskUpdate
}

type TaskUpdate {
  resource: Task
  information: OperationOutcome
}

type TaskDeleteType {
  TaskDelete(id: ID): TaskDelete
}

type TaskDelete {
  information: OperationOutcome
}

