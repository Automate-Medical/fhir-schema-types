# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type NutritionOrder {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  instantiatesCanonical: canonical  _instantiatesCanonical: [ElementBase]
  instantiatesUri: uri  _instantiatesUri: [ElementBase]
  instantiates: uri  _instantiates: [ElementBase]
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  patient: Reference!
  encounter: Reference
  dateTime: dateTime  _dateTime: ElementBase
  orderer: Reference
  allergyIntolerance: [Reference]
  foodPreferenceModifier: [CodeableConcept]
  excludeFoodModifier: [CodeableConcept]
  oralDiet: NutritionOrderOralDiet
  supplement: [NutritionOrderSupplement]
  enteralFormula: NutritionOrderEnteralFormula
  note: [Annotation]
}

type NutritionOrderOralDiet {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: [CodeableConcept]
  schedule: [Timing]
  nutrient: [NutritionOrderOralDietNutrient]
  texture: [NutritionOrderOralDietTexture]
  fluidConsistencyType: [CodeableConcept]
  instruction: String  _instruction: ElementBase
}

type NutritionOrderOralDietNutrient {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  modifier: CodeableConcept
  amount: Quantity
}

type NutritionOrderOralDietTexture {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  modifier: CodeableConcept
  foodType: CodeableConcept
}

type NutritionOrderSupplement {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  productName: String  _productName: ElementBase
  schedule: [Timing]
  quantity: Quantity
  instruction: String  _instruction: ElementBase
}

type NutritionOrderEnteralFormula {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  baseFormulaType: CodeableConcept
  baseFormulaProductName: String  _baseFormulaProductName: ElementBase
  additiveType: CodeableConcept
  additiveProductName: String  _additiveProductName: ElementBase
  caloricDensity: Quantity
  routeofAdministration: CodeableConcept
  administration: [NutritionOrderEnteralFormulaAdministration]
  maxVolumeToDeliver: Quantity
  administrationInstruction: String  _administrationInstruction: ElementBase
}

type NutritionOrderEnteralFormulaAdministration {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  schedule: Timing
  quantity: Quantity
  rateQuantity: Quantity
  rateRatio: Ratio
}

input NutritionOrderInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  instantiatesCanonical: canonical  _instantiatesCanonical: [ElementBase]
  instantiatesUri: uri  _instantiatesUri: [ElementBase]
  instantiates: uri  _instantiates: [ElementBase]
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  patient: ReferenceInput!
  encounter: ReferenceInput
  dateTime: dateTime  _dateTime: ElementBase
  orderer: ReferenceInput
  allergyIntolerance: [ReferenceInput]
  foodPreferenceModifier: [CodeableConceptInput]
  excludeFoodModifier: [CodeableConceptInput]
  oralDiet: NutritionOrderOralDietInput
  supplement: [NutritionOrderSupplementInput]
  enteralFormula: NutritionOrderEnteralFormulaInput
  note: [AnnotationInput]
}

input NutritionOrderOralDietInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: [CodeableConceptInput]
  schedule: [TimingInput]
  nutrient: [NutritionOrderOralDietNutrientInput]
  texture: [NutritionOrderOralDietTextureInput]
  fluidConsistencyType: [CodeableConceptInput]
  instruction: String  _instruction: ElementBase
}

input NutritionOrderOralDietNutrientInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  modifier: CodeableConceptInput
  amount: QuantityInput
}

input NutritionOrderOralDietTextureInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  modifier: CodeableConceptInput
  foodType: CodeableConceptInput
}

input NutritionOrderSupplementInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  productName: String  _productName: ElementBase
  schedule: [TimingInput]
  quantity: QuantityInput
  instruction: String  _instruction: ElementBase
}

input NutritionOrderEnteralFormulaInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  baseFormulaType: CodeableConceptInput
  baseFormulaProductName: String  _baseFormulaProductName: ElementBase
  additiveType: CodeableConceptInput
  additiveProductName: String  _additiveProductName: ElementBase
  caloricDensity: QuantityInput
  routeofAdministration: CodeableConceptInput
  administration: [NutritionOrderEnteralFormulaAdministrationInput]
  maxVolumeToDeliver: QuantityInput
  administrationInstruction: String  _administrationInstruction: ElementBase
}

input NutritionOrderEnteralFormulaAdministrationInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  schedule: TimingInput
  quantity: QuantityInput
  rateQuantity: QuantityInput
  rateRatio: RatioInput
}

type NutritionOrderReadType {
  NutritionOrder(id: ID!): NutritionOrder
}

type NutritionOrderListType {
  NutritionOrderList(_filter: String
    additive: [token]
    datetime: [date]
    encounter: [reference]
    formula: [token]
    identifier: [token]
    instantiates_canonical: [reference]
    instantiates_uri: [uri]
    oraldiet: [token]
    patient: [reference]
    provider: [reference]
    status: [token]
    supplement: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [NutritionOrder]
}

type NutritionOrderConnectionType {
  NutritionOrderConection(_filter: String
    additive: [token]
    datetime: [date]
    encounter: [reference]
    formula: [token]
    identifier: [token]
    instantiates_canonical: [reference]
    instantiates_uri: [uri]
    oraldiet: [token]
    patient: [reference]
    provider: [reference]
    status: [token]
    supplement: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): NutritionOrderConnection
}

type NutritionOrderConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [NutritionOrderEdge]
}

type NutritionOrderEdge {
  mode: String
  score: Float
  resource: NutritionOrder
}

type NutritionOrderCreateType {
  NutritionOrderCreate(resource: NutritionOrderInput): NutritionOrderCreation
}

type NutritionOrderCreation {
  location: String
  resource: NutritionOrder
  information: OperationOutcome
}

type NutritionOrderUpdateType {
  NutritionOrderUpdate(id: ID, resource: NutritionOrderInput): NutritionOrderUpdate
}

type NutritionOrderUpdate {
  resource: NutritionOrder
  information: OperationOutcome
}

type NutritionOrderDeleteType {
  NutritionOrderDelete(id: ID): NutritionOrderDelete
}

type NutritionOrderDelete {
  information: OperationOutcome
}

