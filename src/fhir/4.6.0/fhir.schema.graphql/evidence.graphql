# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type Evidence {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  citeAsReference: Reference
  citeAsMarkdown: markdown  _citeAsMarkdown: ElementBase
  status: code  _status: ElementBase
  date: dateTime  _date: ElementBase
  useContext: [UsageContext]
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  description: markdown  _description: ElementBase
  assertion: markdown  _assertion: ElementBase
  note: [Annotation]
  variableDefinition: [EvidenceVariableDefinition]!
  synthesisType: CodeableConcept
  studyType: CodeableConcept
  statistic: [Statistic]
  distribution: [OrderedDistribution]
  certainty: [EvidenceCertainty]
}

type EvidenceVariableDefinition {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  note: [Annotation]
  variableRole: CodeableConcept!
  observed: Reference
  intended: Reference
  directnessMatch: CodeableConcept
}

type EvidenceCertainty {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  note: [Annotation]
  type: CodeableConcept
  rating: CodeableConcept
  rater: String  _rater: ElementBase
  subcomponent: [EvidenceCertainty]
}

input EvidenceInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBase
  identifier: [IdentifierInput]
  version: String  _version: ElementBase
  title: String  _title: ElementBase
  citeAsReference: ReferenceInput
  citeAsMarkdown: markdown  _citeAsMarkdown: ElementBase
  status: code  _status: ElementBase
  date: dateTime  _date: ElementBase
  useContext: [UsageContextInput]
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetailInput]
  author: [ContactDetailInput]
  editor: [ContactDetailInput]
  reviewer: [ContactDetailInput]
  endorser: [ContactDetailInput]
  relatedArtifact: [RelatedArtifactInput]
  description: markdown  _description: ElementBase
  assertion: markdown  _assertion: ElementBase
  note: [AnnotationInput]
  variableDefinition: [EvidenceVariableDefinitionInput]!
  synthesisType: CodeableConceptInput
  studyType: CodeableConceptInput
  statistic: [StatisticInput]
  distribution: [OrderedDistributionInput]
  certainty: [EvidenceCertaintyInput]
}

input EvidenceVariableDefinitionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBase
  note: [AnnotationInput]
  variableRole: CodeableConceptInput!
  observed: ReferenceInput
  intended: ReferenceInput
  directnessMatch: CodeableConceptInput
}

input EvidenceCertaintyInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  note: [AnnotationInput]
  type: CodeableConceptInput
  rating: CodeableConceptInput
  rater: String  _rater: ElementBase
  subcomponent: [EvidenceCertainty]
}

type EvidenceReadType {
  Evidence(id: ID!): Evidence
}

type EvidenceListType {
  EvidenceList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [Evidence]
}

type EvidenceConnectionType {
  EvidenceConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): EvidenceConnection
}

type EvidenceConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [EvidenceEdge]
}

type EvidenceEdge {
  mode: String
  score: Float
  resource: Evidence
}

type EvidenceCreateType {
  EvidenceCreate(resource: EvidenceInput): EvidenceCreation
}

type EvidenceCreation {
  location: String
  resource: Evidence
  information: OperationOutcome
}

type EvidenceUpdateType {
  EvidenceUpdate(id: ID, resource: EvidenceInput): EvidenceUpdate
}

type EvidenceUpdate {
  resource: Evidence
  information: OperationOutcome
}

type EvidenceDeleteType {
  EvidenceDelete(id: ID): EvidenceDelete
}

type EvidenceDelete {
  information: OperationOutcome
}

