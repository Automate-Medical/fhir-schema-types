# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type HealthcareService {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  providedBy: Reference
  category: [CodeableConcept]
  type: [CodeableConcept]
  specialty: [CodeableConcept]
  location: [Reference]
  name: String  _name: ElementBase
  comment: String  _comment: ElementBase
  extraDetails: markdown  _extraDetails: ElementBase
  photo: Attachment
  telecom: [ContactPoint]
  coverageArea: [Reference]
  serviceProvisionCode: [CodeableConcept]
  eligibility: [HealthcareServiceEligibility]
  program: [CodeableConcept]
  characteristic: [CodeableConcept]
  communication: [CodeableConcept]
  referralMethod: [CodeableConcept]
  appointmentRequired: Boolean  _appointmentRequired: ElementBase
  availableTime: [HealthcareServiceAvailableTime]
  notAvailable: [HealthcareServiceNotAvailable]
  availabilityExceptions: String  _availabilityExceptions: ElementBase
  endpoint: [Reference]
}

type HealthcareServiceEligibility {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  comment: markdown  _comment: ElementBase
}

type HealthcareServiceAvailableTime {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  daysOfWeek: code  _daysOfWeek: [ElementBase]
  allDay: Boolean  _allDay: ElementBase
  availableStartTime: time  _availableStartTime: ElementBase
  availableEndTime: time  _availableEndTime: ElementBase
}

type HealthcareServiceNotAvailable {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  during: Period
}

input HealthcareServiceInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  active: Boolean  _active: ElementBase
  providedBy: ReferenceInput
  category: [CodeableConceptInput]
  type: [CodeableConceptInput]
  specialty: [CodeableConceptInput]
  location: [ReferenceInput]
  name: String  _name: ElementBase
  comment: String  _comment: ElementBase
  extraDetails: markdown  _extraDetails: ElementBase
  photo: AttachmentInput
  telecom: [ContactPointInput]
  coverageArea: [ReferenceInput]
  serviceProvisionCode: [CodeableConceptInput]
  eligibility: [HealthcareServiceEligibilityInput]
  program: [CodeableConceptInput]
  characteristic: [CodeableConceptInput]
  communication: [CodeableConceptInput]
  referralMethod: [CodeableConceptInput]
  appointmentRequired: Boolean  _appointmentRequired: ElementBase
  availableTime: [HealthcareServiceAvailableTimeInput]
  notAvailable: [HealthcareServiceNotAvailableInput]
  availabilityExceptions: String  _availabilityExceptions: ElementBase
  endpoint: [ReferenceInput]
}

input HealthcareServiceEligibilityInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput
  comment: markdown  _comment: ElementBase
}

input HealthcareServiceAvailableTimeInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  daysOfWeek: code  _daysOfWeek: [ElementBase]
  allDay: Boolean  _allDay: ElementBase
  availableStartTime: time  _availableStartTime: ElementBase
  availableEndTime: time  _availableEndTime: ElementBase
}

input HealthcareServiceNotAvailableInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  during: PeriodInput
}

type HealthcareServiceReadType {
  HealthcareService(id: ID!): HealthcareService
}

type HealthcareServiceListType {
  HealthcareServiceList(_filter: String
    active: [token]
    characteristic: [token]
    coverage_area: [reference]
    endpoint: [reference]
    identifier: [token]
    location: [reference]
    name: [String]
    organization: [reference]
    program: [token]
    service_category: [token]
    service_type: [token]
    specialty: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [HealthcareService]
}

type HealthcareServiceConnectionType {
  HealthcareServiceConection(_filter: String
    active: [token]
    characteristic: [token]
    coverage_area: [reference]
    endpoint: [reference]
    identifier: [token]
    location: [reference]
    name: [String]
    organization: [reference]
    program: [token]
    service_category: [token]
    service_type: [token]
    specialty: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): HealthcareServiceConnection
}

type HealthcareServiceConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [HealthcareServiceEdge]
}

type HealthcareServiceEdge {
  mode: String
  score: Float
  resource: HealthcareService
}

type HealthcareServiceCreateType {
  HealthcareServiceCreate(resource: HealthcareServiceInput): HealthcareServiceCreation
}

type HealthcareServiceCreation {
  location: String
  resource: HealthcareService
  information: OperationOutcome
}

type HealthcareServiceUpdateType {
  HealthcareServiceUpdate(id: ID, resource: HealthcareServiceInput): HealthcareServiceUpdate
}

type HealthcareServiceUpdate {
  resource: HealthcareService
  information: OperationOutcome
}

type HealthcareServiceDeleteType {
  HealthcareServiceDelete(id: ID): HealthcareServiceDelete
}

type HealthcareServiceDelete {
  information: OperationOutcome
}

