# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type EvidenceReport {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContext]
  identifier: [Identifier]
  relatedIdentifier: [Identifier]
  citeAsReference: Reference
  citeAsMarkdown: markdown  _citeAsMarkdown: ElementBase
  type: CodeableConcept
  note: [Annotation]
  relatedArtifact: [RelatedArtifact]
  subject: EvidenceReportSubject!
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatesTo: [EvidenceReportRelatesTo]
  section: [EvidenceReportSection]
}

type EvidenceReportSubject {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  characteristic: [EvidenceReportSubjectCharacteristic]
  note: [Annotation]
}

type EvidenceReportSubjectCharacteristic {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept!
  valueReference: Reference
  valueCodeableConcept: CodeableConcept
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueQuantity: Quantity
  valueRange: Range
  exclude: Boolean  _exclude: ElementBase
  period: Period
}

type EvidenceReportRelatesTo {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  code: code  _code: ElementBase
  targetIdentifier: Identifier
  targetReference: Reference
}

type EvidenceReportSection {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  title: String  _title: ElementBase
  focus: CodeableConcept
  focusReference: Reference
  author: [Reference]
  text: Narrative
  mode: code  _mode: ElementBase
  orderedBy: CodeableConcept
  entryClassifier: [CodeableConcept]
  entryReference: [Reference]
  entryQuantity: [Quantity]
  emptyReason: CodeableConcept
  section: [EvidenceReportSection]
}

input EvidenceReportInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBase
  status: code  _status: ElementBase
  useContext: [UsageContextInput]
  identifier: [IdentifierInput]
  relatedIdentifier: [IdentifierInput]
  citeAsReference: ReferenceInput
  citeAsMarkdown: markdown  _citeAsMarkdown: ElementBase
  type: CodeableConceptInput
  note: [AnnotationInput]
  relatedArtifact: [RelatedArtifactInput]
  subject: EvidenceReportSubjectInput!
  publisher: String  _publisher: ElementBase
  contact: [ContactDetailInput]
  author: [ContactDetailInput]
  editor: [ContactDetailInput]
  reviewer: [ContactDetailInput]
  endorser: [ContactDetailInput]
  relatesTo: [EvidenceReportRelatesToInput]
  section: [EvidenceReportSectionInput]
}

input EvidenceReportSubjectInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  characteristic: [EvidenceReportSubjectCharacteristicInput]
  note: [AnnotationInput]
}

input EvidenceReportSubjectCharacteristicInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput!
  valueReference: ReferenceInput
  valueCodeableConcept: CodeableConceptInput
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueQuantity: QuantityInput
  valueRange: RangeInput
  exclude: Boolean  _exclude: ElementBase
  period: PeriodInput
}

input EvidenceReportRelatesToInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: code  _code: ElementBase
  targetIdentifier: IdentifierInput
  targetReference: ReferenceInput
}

input EvidenceReportSectionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  title: String  _title: ElementBase
  focus: CodeableConceptInput
  focusReference: ReferenceInput
  author: [ReferenceInput]
  text: NarrativeInput
  mode: code  _mode: ElementBase
  orderedBy: CodeableConceptInput
  entryClassifier: [CodeableConceptInput]
  entryReference: [ReferenceInput]
  entryQuantity: [QuantityInput]
  emptyReason: CodeableConceptInput
  section: [EvidenceReportSection]
}

type EvidenceReportReadType {
  EvidenceReport(id: ID!): EvidenceReport
}

type EvidenceReportListType {
  EvidenceReportList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    identifier: [token]
    publisher: [String]
    status: [token]
    url: [uri]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [EvidenceReport]
}

type EvidenceReportConnectionType {
  EvidenceReportConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    identifier: [token]
    publisher: [String]
    status: [token]
    url: [uri]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): EvidenceReportConnection
}

type EvidenceReportConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [EvidenceReportEdge]
}

type EvidenceReportEdge {
  mode: String
  score: Float
  resource: EvidenceReport
}

type EvidenceReportCreateType {
  EvidenceReportCreate(resource: EvidenceReportInput): EvidenceReportCreation
}

type EvidenceReportCreation {
  location: String
  resource: EvidenceReport
  information: OperationOutcome
}

type EvidenceReportUpdateType {
  EvidenceReportUpdate(id: ID, resource: EvidenceReportInput): EvidenceReportUpdate
}

type EvidenceReportUpdate {
  resource: EvidenceReport
  information: OperationOutcome
}

type EvidenceReportDeleteType {
  EvidenceReportDelete(id: ID): EvidenceReportDelete
}

type EvidenceReportDelete {
  information: OperationOutcome
}

