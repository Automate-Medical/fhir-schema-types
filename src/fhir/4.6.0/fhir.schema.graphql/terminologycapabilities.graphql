# FHIR GraphQL Schema. Version 4.6.0

# import the types from 'types.graphql'

type TerminologyCapabilities {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  kind: code  _kind: ElementBase
  software: TerminologyCapabilitiesSoftware
  implementation: TerminologyCapabilitiesImplementation
  lockedDate: Boolean  _lockedDate: ElementBase
  codeSystem: [TerminologyCapabilitiesCodeSystem]
  expansion: TerminologyCapabilitiesExpansion
  codeSearch: code  _codeSearch: ElementBase
  validateCode: TerminologyCapabilitiesValidateCode
  translation: TerminologyCapabilitiesTranslation
  closure: TerminologyCapabilitiesClosure
}

type TerminologyCapabilitiesSoftware {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  version: String  _version: ElementBase
}

type TerminologyCapabilitiesImplementation {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  description: String  _description: ElementBase
  url: url  _url: ElementBase
}

type TerminologyCapabilitiesCodeSystem {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  uri: canonical  _uri: ElementBase
  version: [TerminologyCapabilitiesCodeSystemVersion]
  subsumption: Boolean  _subsumption: ElementBase
}

type TerminologyCapabilitiesCodeSystemVersion {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  code: String  _code: ElementBase
  isDefault: Boolean  _isDefault: ElementBase
  compositional: Boolean  _compositional: ElementBase
  language: code  _language: [ElementBase]
  filter: [TerminologyCapabilitiesCodeSystemVersionFilter]
  property: code  _property: [ElementBase]
}

type TerminologyCapabilitiesCodeSystemVersionFilter {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  code: code  _code: ElementBase
  op: code  _op: [ElementBase]
}

type TerminologyCapabilitiesExpansion {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  hierarchical: Boolean  _hierarchical: ElementBase
  paging: Boolean  _paging: ElementBase
  incomplete: Boolean  _incomplete: ElementBase
  parameter: [TerminologyCapabilitiesExpansionParameter]
  textFilter: markdown  _textFilter: ElementBase
}

type TerminologyCapabilitiesExpansionParameter {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  name: code  _name: ElementBase
  documentation: String  _documentation: ElementBase
}

type TerminologyCapabilitiesValidateCode {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  translations: Boolean  _translations: ElementBase
}

type TerminologyCapabilitiesTranslation {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  needsMap: Boolean  _needsMap: ElementBase
}

type TerminologyCapabilitiesClosure {
  id: ID
  extension: [Extension]
  modifierExtension: [Extension]
  translation: Boolean  _translation: ElementBase
}

input TerminologyCapabilitiesInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBase
  identifier: [IdentifierInput]
  version: String  _version: ElementBase
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBase
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  kind: code  _kind: ElementBase
  software: TerminologyCapabilitiesSoftwareInput
  implementation: TerminologyCapabilitiesImplementationInput
  lockedDate: Boolean  _lockedDate: ElementBase
  codeSystem: [TerminologyCapabilitiesCodeSystemInput]
  expansion: TerminologyCapabilitiesExpansionInput
  codeSearch: code  _codeSearch: ElementBase
  validateCode: TerminologyCapabilitiesValidateCodeInput
  translation: TerminologyCapabilitiesTranslationInput
  closure: TerminologyCapabilitiesClosureInput
}

input TerminologyCapabilitiesSoftwareInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBase
  version: String  _version: ElementBase
}

input TerminologyCapabilitiesImplementationInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: String  _description: ElementBase
  url: url  _url: ElementBase
}

input TerminologyCapabilitiesCodeSystemInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  uri: canonical  _uri: ElementBase
  version: [TerminologyCapabilitiesCodeSystemVersionInput]
  subsumption: Boolean  _subsumption: ElementBase
}

input TerminologyCapabilitiesCodeSystemVersionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: String  _code: ElementBase
  isDefault: Boolean  _isDefault: ElementBase
  compositional: Boolean  _compositional: ElementBase
  language: code  _language: [ElementBase]
  filter: [TerminologyCapabilitiesCodeSystemVersionFilterInput]
  property: code  _property: [ElementBase]
}

input TerminologyCapabilitiesCodeSystemVersionFilterInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: code  _code: ElementBase
  op: code  _op: [ElementBase]
}

input TerminologyCapabilitiesExpansionInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  hierarchical: Boolean  _hierarchical: ElementBase
  paging: Boolean  _paging: ElementBase
  incomplete: Boolean  _incomplete: ElementBase
  parameter: [TerminologyCapabilitiesExpansionParameterInput]
  textFilter: markdown  _textFilter: ElementBase
}

input TerminologyCapabilitiesExpansionParameterInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: code  _name: ElementBase
  documentation: String  _documentation: ElementBase
}

input TerminologyCapabilitiesValidateCodeInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  translations: Boolean  _translations: ElementBase
}

input TerminologyCapabilitiesTranslationInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  needsMap: Boolean  _needsMap: ElementBase
}

input TerminologyCapabilitiesClosureInput {
  id: ID
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  translation: Boolean  _translation: ElementBase
}

type TerminologyCapabilitiesReadType {
  TerminologyCapabilities(id: ID!): TerminologyCapabilities
}

type TerminologyCapabilitiesListType {
  TerminologyCapabilitiesList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): [TerminologyCapabilities]
}

type TerminologyCapabilitiesConnectionType {
  TerminologyCapabilitiesConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _id: [token]
    _lastUpdated: [date]
    _profile: [uri]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _sort: String
    _count: Int
    _cursor: String): TerminologyCapabilitiesConnection
}

type TerminologyCapabilitiesConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [TerminologyCapabilitiesEdge]
}

type TerminologyCapabilitiesEdge {
  mode: String
  score: Float
  resource: TerminologyCapabilities
}

type TerminologyCapabilitiesCreateType {
  TerminologyCapabilitiesCreate(resource: TerminologyCapabilitiesInput): TerminologyCapabilitiesCreation
}

type TerminologyCapabilitiesCreation {
  location: String
  resource: TerminologyCapabilities
  information: OperationOutcome
}

type TerminologyCapabilitiesUpdateType {
  TerminologyCapabilitiesUpdate(id: ID, resource: TerminologyCapabilitiesInput): TerminologyCapabilitiesUpdate
}

type TerminologyCapabilitiesUpdate {
  resource: TerminologyCapabilities
  information: OperationOutcome
}

type TerminologyCapabilitiesDeleteType {
  TerminologyCapabilitiesDelete(id: ID): TerminologyCapabilitiesDelete
}

type TerminologyCapabilitiesDelete {
  information: OperationOutcome
}

